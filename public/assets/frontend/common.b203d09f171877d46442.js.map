{"version":3,"mappings":"qHAUC,YACD,aAEAA,+BAEA,8CAEA,oBACA,uBACA,qBACA,4BAEA,6BACA,wCAGA,OACAC,sBACA,OACAC,sBACAC,iBACAC,WACAC,mBAIAC,sBACA,OACAJ,6BACAC,0BACAC,6DACAC,gCAIAE,oBACA,iBA2BQ,CACR,+BACA,qBACA,kCACAC,gBAIA,IAFAC,4BACAC,0CACAC,0BACA,wBACAC,2BACAC,qDAEAJ,8BACA,8BACA,uBACAE,oCAEAF,8BACAG,4BAEAC,eACAC,uBACAD,cAGAC,EAnDA,QADAC,MACAC,GADAC,WACA,GAAwBD,aAAmBA,GAC3C,IACAP,EADAS,OAEA,IADAT,sBACAE,OACAO,mCACAN,oCACAA,gBAGA,QACA,aACA,8BACAO,kBAGA,sCACAD,qDACY,YACZH,KAGAA,gCACA,yBACA,4BACAK,GA+BAC,uBACA,yCACA,gBACAJ,4CADAjB,QAIAsB,sBACA,yCAIA,GAHAV,aACAA,2CAEAD,cAQQ,6BACRA,iCARA,YAAwBI,aAAmBA,GAC3C,WACA,gBACAJ,gBACAA,mEAQAY,8BAEAC,sBACA,gBAA4BC,uCAAkD,CAAGA,yBA7HjFzB,CAAQ0B,EAAQ,0BCcf,YACD,aAEA1B,8BACA,OACAC,sBACA,OACA0B,qBACAC,wBACAC,uBACAC,6BACAC,kBAGAzB,sBACA,OACAqB,2BACAC,iCACAC,+BACAC,0CAIAvB,oBAoBA,OAnBAI,iBACAqB,4CACApB,eACAA,gCAGAD,qBACAC,4BACAA,iBAEAD,wBACAA,cACAC,kCACAA,oBAEAD,uCAIA,6BACA,iBACAC,yBACAF,iCACAE,2BACAA,cAGAS,iCACA,6BAEAE,8BAEAC,sBAAiC,OAAQC,sBAEzCH,sBACA,QACA,4CACAW,wCAEA,QACArB,EACAF,wBAtEAV,CAAQ0B,EAAQ,0BCJf,YACD,aAiDA,gBACA,wBACA,wDAGA,gBACA,mBACA,SACA,4BACAjB,sBACAA,oBACAA,YAEAA,YAEA,0CAGA,cACA,kBACA,oBACA,kDAEA,QADAyB,KACAf,IAAoBA,WAAgBA,IACpCe,sCACA,SAGA,iBACAzB,qCACAD,sBACAA,sBACAA,YAGA,gBACA,qBACA,cACA,wBACA,6CACAW,qBACAN,QAGA,WACA,uCACA,6BACA,iCACAC,EAEA,MACA,OADAA,qCACAM,yDACAD,uBACAL,EAKA,QADAqB,aACAC,IAAsBA,WAAqBA,KAC3C,WACAC,2CACA,MACAC,YACAlB,oBACYkB,cACZlB,qCACAA,qBACYkB,sCACZlB,uBAGAkB,aACArB,2BACAqB,eACAlB,4CACAkB,eACAlB,eACA,cAEA,GADAmB,qBACAF,+CACA,YAA4BG,WAAoBA,IAChDH,OACAjB,iCAA8DqB,+BAC9D,kDACAF,KACY,iBACZA,KAEAA,GAIA,gBACA,MAIA,gBACA,kBACA,2DACA,QACA,uCACA,gDACApB,IAEA,wCACA,YAGA,oBACA,MACA,6CAA8DL,MAAYA,UAC1EK,+CACA,2CACAgB,4BACAhB,mBACAe,oBAAgCQ,qDAEhCR,eACAA,SAAmBQ,OACnBC,oBACAC,4CACAC,oCAGA,gBACA,YAAoB1B,WAAgBA,yBAGpC,gBACA,uBACA,gCACA,6CACA,iFACA,cAEA,qCACA2B,SAAmB,CACnB,YAAwBX,WAAkBA,KAC1C,WACA,iDACA,sBACA,YACArB,KACAsB,uCACAhB,uBACA,aAIA,MAEA,0BAvMApB,iCACAA,2BACA,4BAIAA,2BACA+C,aACA,SAAoB3B,aAA0BP,KAC9C,4CAEA,QADAmC,iBACAZ,IAAsBA,WAAiBA,KACvC,WACAY,oBACAV,4BAGA,OACArC,sBACA,OAAgBwB,2BAChBwB,2BACA5B,mBAEAf,sBACA,OAAiBmB,gCACjBwB,8BACA5B,oCACAmB,eACAU,qDACAV,UACAU,0BACA,6BAAgDC,EAAMA,SACtDD,oBAAgCR,YAChCU,YACA3B,qEACA4B,yBACA,UAEA9C,aACAiB,sBAAmC,iBAAuBkB,uCAC1DrB,eAEA,0CACAgB,WACA,UApDArC,CAAQ0B,EAAQ,0BCSf,YACD,aAEA1B,0CACA,cAEA,cACA,+CAGA,yHACAe,kCACAE,8BACAD,+BAEAE,sBACA,iBACA,wBACAT,6CACA,0CACAyB,+CACA,qCACA,6CAEAf,iBAEAV,OAGA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R,QAAUgH,EAAU9D,EAAgB,IAGrD+D,cAAe,+CACfC,cAAe,CAACC,QAAS,OACzBxG,YAAa,IACbC,KAAM,YAKVc,EAAW0F,WAAW,gBAAiB,UAEvC,IAAIzF,EAAQ,SAAS0F,GAAO,OAAOA,EAAIC,MAAM,MAE7C5F,EAAW0F,WAAW,gBAAiB,CACrCG,KAAM,SACNhE,eAAgB5B,EAAM,gIAvYtB6F,CAAIC,EAAQ,0BCKf,YACD,aAEA,cAEA,QADAnK,KACAT,eAAoCA,MAAOA,aAC3C,SAGA,OACA,kFACA,gFACA,+EACA,oFACA,yEACA,kFACAC,OAEAC,gEACA,gCACAC,qBACAG,GAAe,YAAY,IAAK,SAChCE,GAAe,YAAY,IAAK,SAEhCjB,gCACA,MAEA,kBACA,0BACAoC,OAGA,gBACA,uCACA,0BACA,UAEA,4BACA,iBACA,0BACA,2CACM,UACN,YACA3B,0BAEA,WACM,WACN,oBACA2B,oBACAA,yBACAA,0BACAA,iBAAsCI,WAAkBU,MACxD,wBACA,UACAnC,oCACAN,oBAFA,WAGM,UACN,qBACA,UACM,2EACN,2BACM,UACN,2CACA2B,8BACAA,oBACA,SACM,gBACN,4DACA,SACM,WACN,2BACA,oCACAA,SACA,SACM,UACN,0CACAA,mCAGAA,iBACAA,gBACA,QAIAA,4BACA,OAIAA,iCACAA,+BAEAA,kBACA,QAEA,WACM,8CACN,kBACAA,8BACA,aACM,UACN,0BACAA,mBACQA,YACRA,YAEAA,SAEA,aACM,kCAGN,OAFAA,8BACAA,gBACAA,kBACA,QACM,uCAA2D,iBACjE,aACA,KACM,qBAAwB8H,QAC9B,WACA,KACM,sBACN,cACM,iCACN,uCACA,0BACA,WAEA,YAIA,cAEA,QADA3H,wBACA,oBACA,KAYAW,SAZA,CACA,SAAee,cACf5B,YACU,MAAY4B,eAEtB,KADA5B,EACA,gBACU,cACVG,KACA,MAEAU,UAKA,yBACAV,EAGA,cACA,gBACA,cACA,iBAA6B,CAC7B,QACA,wBACAH,qCAEAA,2CAEQ,gBACRA,wCAEA,eAGA,aACA,SACA,qBACA,UACAA,iBACAA,uCAEAD,KACAF,SAGA,oBACA,qBACA,WAOA,IALA,wCACAgB,yBACAV,YAGA,qBACA,kBACAU,iBACA,MAEA,kBACA,cAA2B,CAC3B,SACAA,WAA+BY,2CAE/BZ,qBACA,SACY,wBACZA,qBACA,OAGAC,cAEA,UAGA,gBACA,qBACA,uBACAd,4BACAA,cACA,UAGA,gBACA,0CACAC,iBACAF,cACA,UAGA,OACAnC,sBACA,OAAckE,aACd6F,WACAsB,SAAwBzH,mCACxB0H,iBACAC,aACAC,aAGAlL,oBACAW,OACAkB,sCACA,6CACAI,IACA,eACA,kBAMA,YALAH,4BACA3B,8CACA,uBACA,sDACA,cAEA8B,IACA7B,qCACAC,uCACA,oDAEA,0CACA2B,aAGA,0CACA,+BAEA,wBAAwC2H,QACxC5H,WAAyBwB,+CACzB,wBAA8CoG,2BAC9C5H,0BAEAF,UACAE,wCACAD,GAGAhB,qBACA,oDACA,qBACAkB,YACAC,gBACA,qEACA,sCACAJ,iCAGAyI,kDACAtG,gBACAC,iBAIAxE,mCAEAA,uCAvSAA,CAAQ0B,EAAQ,0BCKf,YACD,aAEA1B,gCACA,8BACAU,yBACAC,sBACAC,sBACAG,uBAEA,cACA,mCAGA,IASAK,EARAF,iBADA,+BACAuE,WAIAvD,IAFA,kDACA,0CAAkE,MAAM,MAAM,MAG9Ef,yBAIA,cACA,oCAGA,gBACA,eAEA,eACA+B,SACAC,cACA,YACM,SACND,SACAA,aAEA,YACM,kBACNC,wBACA,WAEAA,sBACA,UAGA,gBACA,qBACA,oCACAI,cACAhB,SAGAY,mBACAK,SACAA,SACAD,eAEAC,cAGA,YAIA,gBAGA,gBACA,eACAC,WACAC,2BAIA,MAFA,kCAGAC,UAA4CJ,SAC5C1C,OACAyC,gBAEAA,cACA,UACQ,kBACRA,iBACAC,SACA,YAEA,SAIA,OAzBA,UAA0BJ,MAyB1BK,EAGA,cACA,qBACA,sBACAL,SACAK,cACA,YAEAjB,QAKA,cACA,qBACAW,gBACA,IACAM,EADAN,mBACAH,aACAG,kBAA6BU,YAI7B,cACA,oBAEAV,iBAGA,gBACA,eAGA,iBACA,yCACAC,iBAEA,iBACA,yCA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","names":["t","startState","outer","innerActive","inner","startingInner","copyState","token","this","p","v","i","s","g","k","z","w","B","R","b","a","indent","blankLine","electricChars","innerMode","state","r","base","overlay","basePos","overlayPos","streamSeen","Math","S","m","P","n","d","f","x","E","text","mode","end","endScan","endToken","e","y","F","local","l","o","spec","next","I","C","c","j","h","D","offset","type","prev","align","alignOffset","indexOf","slice","tokenize","scope","prop","dedent","lineComment","fold","start","regex","push","handlebars_raw","pop","handlebars","dash_comment","comment","meta","blockCommentStart","blockCommentEnd","open","close","CodeMirror","words","RegExp","join","wordOperators","wordRegexp","commonKeywords","commonBuiltins","scopes","length","registerHelper","concat","defineMode","conf","parserConf","ERRORCLASS","delimiters","singleDelimiters","operators","singleOperators","doubleOperators","doubleDelimiters","tripleDelimiters","splice","hangingIndent","indentUnit","myKeywords","myBuiltins","undefined","extra_keywords","extra_builtins","py3","version","Number","identifiers","stringPrefixes","keywords","builtins","stream","sol","lastToken","indentation","top","scopeOffset","eatSpace","lineOffset","pushPyScope","peek","errorToken","style","tokenBaseInner","inFormat","match","floatLiteral","eat","intLiteral","current","toLowerCase","formatStringFactory","tokenStringFactory","delimiter","tokenOuter","charAt","substr","singleline","OUTCLASS","depth","tokenNestedExpr","tokenString","eol","eatWhile","singleLineStringErrors","isString","column","indented","beginningOfLine","test","lambda","delimiter_index","pushBracketScope","basecolumn","tokenBase","addErr","tokenLexer","textAfter","Pass","closing","electricInput","closeBrackets","triples","defineMIME","str","split","name","mod","require","context","continuedLine","lastTok","varList","_","tokenizer","indentCount","cursorHalf","definedVars","definedMixins","styleIdentifier","openBracket","cmdState","pair","pairStart","keyCol","inlinePairs","inlineList","literal","escaped","jQuery","RB","initialize","connectWith","dropOnEmpty","stop","update","receive","remove","containment","scroll","helper","dragChanged","u","dragComplete","dragStart","dragStop","getSprint","getStories","getList","handleNewStoryClick","isSprintBacklog","newStory","edit","refresh","recalcVelocity","recalcOddity","setSprintId","getSprintId","show","sprint_id","window","create","msg","html","title","buttons","class","click","modal","get","set","expires","displayEditor","getEditor","handleKeydown","data","saveDirectives","id","url","afterCreate","afterSave","afterUpdate","beforeSave","cancelEdit","copyFromDialog","dialogClass","position","my","resizable","for","findFactory","newInput","prepareInputFromFactory","replaceStatusForNewType","self","editDialogTitle","editorDisplayed","endEdit","error","getID","getType","handleClick","parents","$","hasClass","find","handleSelect","isClosed","isNew","markError","markIfClosed","markSaving","newDialogTitle","processError","refreshed","saveEdits","each","attr","success","unmarkError","unmarkSaving","beforeSaveDragResult","getPoints","refreshStory","initializeNewButtons","initializeSortables","placeholder","cancel","sortable","setTimeout","initializeTasks","initializeImpediments","initializeTaskboardMenus","handleAddNewImpedimentClick","handleAddNewTaskClick","loadColWidthPreference","newImpediment","newTask","updateColWidths","isNaN","saveDragResult"],"sources":["./node_modules/codemirror/addon/mode/multiplex.js","./node_modules/codemirror/addon/mode/overlay.js","./node_modules/codemirror/addon/mode/simple.js","./node_modules/codemirror/mode/coffeescript/coffeescript.js","./node_modules/codemirror/mode/handlebars/handlebars.js","./node_modules/codemirror/mode/haskell/haskell.js","./node_modules/codemirror/mode/python/python.js","./node_modules/codemirror/mode/ruby/ruby.js","./node_modules/codemirror/mode/sass/sass.js","./node_modules/codemirror/mode/stex/stex.js","./node_modules/codemirror/mode/yaml/yaml.js","./src/app/core/augmenting/dynamic-scripts/backlogs/backlog.js","./src/app/core/augmenting/dynamic-scripts/backlogs/burndown.js","./src/app/core/augmenting/dynamic-scripts/backlogs/common.js","./src/app/core/augmenting/dynamic-scripts/backlogs/editable_inplace.js","./src/app/core/augmenting/dynamic-scripts/backlogs/impediment.js","./src/app/core/augmenting/dynamic-scripts/backlogs/master_backlog.js","./src/app/core/augmenting/dynamic-scripts/backlogs/model.js","./src/app/core/augmenting/dynamic-scripts/backlogs/show_main.js","./src/app/core/augmenting/dynamic-scripts/backlogs/sprint.js","./src/app/core/augmenting/dynamic-scripts/backlogs/story.js","./src/app/core/augmenting/dynamic-scripts/backlogs/task.js","./src/app/core/augmenting/dynamic-scripts/backlogs/taskboard.js","./src/app/core/augmenting/dynamic-scripts/backlogs/work_package.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.multiplexingMode = function(outer /*, others */) {\n  // Others should be {open, close, mode [, delimStyle] [, innerStyle] [, parseDelimiters]} objects\n  var others = Array.prototype.slice.call(arguments, 1);\n\n  function indexOf(string, pattern, from, returnEnd) {\n    if (typeof pattern == \"string\") {\n      var found = string.indexOf(pattern, from);\n      return returnEnd && found > -1 ? found + pattern.length : found;\n    }\n    var m = pattern.exec(from ? string.slice(from) : string);\n    return m ? m.index + from + (returnEnd ? m[0].length : 0) : -1;\n  }\n\n  return {\n    startState: function() {\n      return {\n        outer: CodeMirror.startState(outer),\n        innerActive: null,\n        inner: null,\n        startingInner: false\n      };\n    },\n\n    copyState: function(state) {\n      return {\n        outer: CodeMirror.copyState(outer, state.outer),\n        innerActive: state.innerActive,\n        inner: state.innerActive && CodeMirror.copyState(state.innerActive.mode, state.inner),\n        startingInner: state.startingInner\n      };\n    },\n\n    token: function(stream, state) {\n      if (!state.innerActive) {\n        var cutOff = Infinity, oldContent = stream.string;\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          var found = indexOf(oldContent, other.open, stream.pos);\n          if (found == stream.pos) {\n            if (!other.parseDelimiters) stream.match(other.open);\n            state.startingInner = !!other.parseDelimiters\n            state.innerActive = other;\n\n            // Get the outer indent, making sure to handle CodeMirror.Pass\n            var outerIndent = 0;\n            if (outer.indent) {\n              var possibleOuterIndent = outer.indent(state.outer, \"\", \"\");\n              if (possibleOuterIndent !== CodeMirror.Pass) outerIndent = possibleOuterIndent;\n            }\n\n            state.inner = CodeMirror.startState(other.mode, outerIndent);\n            return other.delimStyle && (other.delimStyle + \" \" + other.delimStyle + \"-open\");\n          } else if (found != -1 && found < cutOff) {\n            cutOff = found;\n          }\n        }\n        if (cutOff != Infinity) stream.string = oldContent.slice(0, cutOff);\n        var outerToken = outer.token(stream, state.outer);\n        if (cutOff != Infinity) stream.string = oldContent;\n        return outerToken;\n      } else {\n        var curInner = state.innerActive, oldContent = stream.string;\n        if (!curInner.close && stream.sol()) {\n          state.innerActive = state.inner = null;\n          return this.token(stream, state);\n        }\n        var found = curInner.close && !state.startingInner ?\n            indexOf(oldContent, curInner.close, stream.pos, curInner.parseDelimiters) : -1;\n        if (found == stream.pos && !curInner.parseDelimiters) {\n          stream.match(curInner.close);\n          state.innerActive = state.inner = null;\n          return curInner.delimStyle && (curInner.delimStyle + \" \" + curInner.delimStyle + \"-close\");\n        }\n        if (found > -1) stream.string = oldContent.slice(0, found);\n        var innerToken = curInner.mode.token(stream, state.inner);\n        if (found > -1) stream.string = oldContent;\n        else if (stream.pos > stream.start) state.startingInner = false\n\n        if (found == stream.pos && curInner.parseDelimiters)\n          state.innerActive = state.inner = null;\n\n        if (curInner.innerStyle) {\n          if (innerToken) innerToken = innerToken + \" \" + curInner.innerStyle;\n          else innerToken = curInner.innerStyle;\n        }\n\n        return innerToken;\n      }\n    },\n\n    indent: function(state, textAfter, line) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (!mode.indent) return CodeMirror.Pass;\n      return mode.indent(state.innerActive ? state.inner : state.outer, textAfter, line);\n    },\n\n    blankLine: function(state) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (mode.blankLine) {\n        mode.blankLine(state.innerActive ? state.inner : state.outer);\n      }\n      if (!state.innerActive) {\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          if (other.open === \"\\n\") {\n            state.innerActive = other;\n            state.inner = CodeMirror.startState(other.mode, mode.indent ? mode.indent(state.outer, \"\", \"\") : 0);\n          }\n        }\n      } else if (state.innerActive.close === \"\\n\") {\n        state.innerActive = state.inner = null;\n      }\n    },\n\n    electricChars: outer.electricChars,\n\n    innerMode: function(state) {\n      return state.inner ? {state: state.inner, mode: state.innerActive.mode} : {state: state.outer, mode: outer};\n    }\n  };\n};\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.overlayMode = function(base, overlay, combine) {\n  return {\n    startState: function() {\n      return {\n        base: CodeMirror.startState(base),\n        overlay: CodeMirror.startState(overlay),\n        basePos: 0, baseCur: null,\n        overlayPos: 0, overlayCur: null,\n        streamSeen: null\n      };\n    },\n    copyState: function(state) {\n      return {\n        base: CodeMirror.copyState(base, state.base),\n        overlay: CodeMirror.copyState(overlay, state.overlay),\n        basePos: state.basePos, baseCur: null,\n        overlayPos: state.overlayPos, overlayCur: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (stream != state.streamSeen ||\n          Math.min(state.basePos, state.overlayPos) < stream.start) {\n        state.streamSeen = stream;\n        state.basePos = state.overlayPos = stream.start;\n      }\n\n      if (stream.start == state.basePos) {\n        state.baseCur = base.token(stream, state.base);\n        state.basePos = stream.pos;\n      }\n      if (stream.start == state.overlayPos) {\n        stream.pos = stream.start;\n        state.overlayCur = overlay.token(stream, state.overlay);\n        state.overlayPos = stream.pos;\n      }\n      stream.pos = Math.min(state.basePos, state.overlayPos);\n\n      // state.overlay.combineTokens always takes precedence over combine,\n      // unless set to null\n      if (state.overlayCur == null) return state.baseCur;\n      else if (state.baseCur != null &&\n               state.overlay.combineTokens ||\n               combine && state.overlay.combineTokens == null)\n        return state.baseCur + \" \" + state.overlayCur;\n      else return state.overlayCur;\n    },\n\n    indent: base.indent && function(state, textAfter, line) {\n      return base.indent(state.base, textAfter, line);\n    },\n    electricChars: base.electricChars,\n\n    innerMode: function(state) { return {state: state.base, mode: base}; },\n\n    blankLine: function(state) {\n      var baseToken, overlayToken;\n      if (base.blankLine) baseToken = base.blankLine(state.base);\n      if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n\n      return overlayToken == null ?\n        baseToken :\n        (combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken);\n    }\n  };\n};\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function(name, states) {\n    CodeMirror.defineMode(name, function(config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function(config, states) {\n    ensureState(states, \"start\");\n    var states_ = {}, meta = states.meta || {}, hasIndentation = false;\n    for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n      var list = states_[state] = [], orig = states[state];\n      for (var i = 0; i < orig.length; i++) {\n        var data = orig[i];\n        list.push(new Rule(data, states));\n        if (data.indent || data.dedent) hasIndentation = true;\n      }\n    }\n    var mode = {\n      startState: function() {\n        return {state: \"start\", pending: null,\n                local: null, localState: null,\n                indent: hasIndentation ? [] : null};\n      },\n      copyState: function(state) {\n        var s = {state: state.state, pending: state.pending,\n                 local: state.local, localState: null,\n                 indent: state.indent && state.indent.slice(0)};\n        if (state.localState)\n          s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack)\n          s.stack = state.stack.slice(0);\n        for (var pers = state.persistentStates; pers; pers = pers.next)\n          s.persistentStates = {mode: pers.mode,\n                                spec: pers.spec,\n                                state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n                                next: s.persistentStates};\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function(state) { return state.local && {mode: state.local.mode, state: state.localState}; },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) if (meta.hasOwnProperty(prop))\n      mode[prop] = meta[prop];\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name))\n      throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      if (val.unicode) flags += \"u\"\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n    for (var i = 0; i < val.length; i++)\n      result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function(stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState), m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current())))\n            stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode)\n            enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent)\n            state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent)\n            state.indent.pop();\n          var token = rule.token\n          if (token && token.apply) token = token(matches)\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            for (var j = 2; j < matches.length; j++)\n              if (matches[j])\n                (state.pending || (state.pending = [])).push({text: matches[j], token: rule.token[j - 1]});\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n    for (var prop in a) if (a.hasOwnProperty(prop)) {\n      if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n      props++;\n    }\n    for (var prop in b) if (b.hasOwnProperty(prop)) props--;\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next)\n      if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers)\n      state.persistentStates = {mode: mode, spec: spec.spec, state: lState, next: state.persistentStates};\n\n    state.localState = lState;\n    state.local = {mode: mode,\n                   end: spec.end && toRegex(spec.end),\n                   endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n                   endToken: token && token.join ? token[token.length - 1] : token};\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) if (arr[i] === val) return true;\n  }\n\n  function indentFunction(states, meta) {\n    return function(state, textAfter, line) {\n      if (state.local && state.local.mode.indent)\n        return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1)\n        return CodeMirror.Pass;\n\n      var pos = state.indent.length - 1, rules = states[state.state];\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n        break;\n      }\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/**\n * Link to the project's GitHub page:\n * https://github.com/pickhardt/coffeescript-codemirror-mode\n */\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"coffeescript\", function(conf, parserConf) {\n  var ERRORCLASS = \"error\";\n\n  function wordRegexp(words) {\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n  }\n\n  var operators = /^(?:->|=>|\\+[+=]?|-[\\-=]?|\\*[\\*=]?|\\/[\\/=]?|[=!]=|<[><]?=?|>>?=?|%=?|&=?|\\|=?|\\^=?|\\~|!|\\?|(or|and|\\|\\||&&|\\?)=)/;\n  var delimiters = /^(?:[()\\[\\]{},:`=;]|\\.\\.?\\.?)/;\n  var identifiers = /^[_A-Za-z$][_A-Za-z$0-9]*/;\n  var atProp = /^@[_A-Za-z$][_A-Za-z$0-9]*/;\n\n  var wordOperators = wordRegexp([\"and\", \"or\", \"not\",\n                                  \"is\", \"isnt\", \"in\",\n                                  \"instanceof\", \"typeof\"]);\n  var indentKeywords = [\"for\", \"while\", \"loop\", \"if\", \"unless\", \"else\",\n                        \"switch\", \"try\", \"catch\", \"finally\", \"class\"];\n  var commonKeywords = [\"break\", \"by\", \"continue\", \"debugger\", \"delete\",\n                        \"do\", \"in\", \"of\", \"new\", \"return\", \"then\",\n                        \"this\", \"@\", \"throw\", \"when\", \"until\", \"extends\"];\n\n  var keywords = wordRegexp(indentKeywords.concat(commonKeywords));\n\n  indentKeywords = wordRegexp(indentKeywords);\n\n\n  var stringPrefixes = /^('{3}|\\\"{3}|['\\\"])/;\n  var regexPrefixes = /^(\\/{3}|\\/)/;\n  var commonConstants = [\"Infinity\", \"NaN\", \"undefined\", \"null\", \"true\", \"false\", \"on\", \"off\", \"yes\", \"no\"];\n  var constants = wordRegexp(commonConstants);\n\n  // Tokenizers\n  function tokenBase(stream, state) {\n    // Handle scope changes\n    if (stream.sol()) {\n      if (state.scope.align === null) state.scope.align = false;\n      var scopeOffset = state.scope.offset;\n      if (stream.eatSpace()) {\n        var lineOffset = stream.indentation();\n        if (lineOffset > scopeOffset && state.scope.type == \"coffee\") {\n          return \"indent\";\n        } else if (lineOffset < scopeOffset) {\n          return \"dedent\";\n        }\n        return null;\n      } else {\n        if (scopeOffset > 0) {\n          dedent(stream, state);\n        }\n      }\n    }\n    if (stream.eatSpace()) {\n      return null;\n    }\n\n    var ch = stream.peek();\n\n    // Handle docco title comment (single line)\n    if (stream.match(\"####\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    // Handle multi line comments\n    if (stream.match(\"###\")) {\n      state.tokenize = longComment;\n      return state.tokenize(stream, state);\n    }\n\n    // Single line comment\n    if (ch === \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    // Handle number literals\n    if (stream.match(/^-?[0-9\\.]/, false)) {\n      var floatLiteral = false;\n      // Floats\n      if (stream.match(/^-?\\d*\\.\\d+(e[\\+\\-]?\\d+)?/i)) {\n        floatLiteral = true;\n      }\n      if (stream.match(/^-?\\d+\\.\\d*/)) {\n        floatLiteral = true;\n      }\n      if (stream.match(/^-?\\.\\d+/)) {\n        floatLiteral = true;\n      }\n\n      if (floatLiteral) {\n        // prevent from getting extra . on 1..\n        if (stream.peek() == \".\"){\n          stream.backUp(1);\n        }\n        return \"number\";\n      }\n      // Integers\n      var intLiteral = false;\n      // Hex\n      if (stream.match(/^-?0x[0-9a-f]+/i)) {\n        intLiteral = true;\n      }\n      // Decimal\n      if (stream.match(/^-?[1-9]\\d*(e[\\+\\-]?\\d+)?/)) {\n        intLiteral = true;\n      }\n      // Zero by itself with no other piece of number.\n      if (stream.match(/^-?0(?![\\dx])/i)) {\n        intLiteral = true;\n      }\n      if (intLiteral) {\n        return \"number\";\n      }\n    }\n\n    // Handle strings\n    if (stream.match(stringPrefixes)) {\n      state.tokenize = tokenFactory(stream.current(), false, \"string\");\n      return state.tokenize(stream, state);\n    }\n    // Handle regex literals\n    if (stream.match(regexPrefixes)) {\n      if (stream.current() != \"/\" || stream.match(/^.*\\//, false)) { // prevent highlight of division\n        state.tokenize = tokenFactory(stream.current(), true, \"string-2\");\n        return state.tokenize(stream, state);\n      } else {\n        stream.backUp(1);\n      }\n    }\n\n\n\n    // Handle operators and delimiters\n    if (stream.match(operators) || stream.match(wordOperators)) {\n      return \"operator\";\n    }\n    if (stream.match(delimiters)) {\n      return \"punctuation\";\n    }\n\n    if (stream.match(constants)) {\n      return \"atom\";\n    }\n\n    if (stream.match(atProp) || state.prop && stream.match(identifiers)) {\n      return \"property\";\n    }\n\n    if (stream.match(keywords)) {\n      return \"keyword\";\n    }\n\n    if (stream.match(identifiers)) {\n      return \"variable\";\n    }\n\n    // Handle non-detected items\n    stream.next();\n    return ERRORCLASS;\n  }\n\n  function tokenFactory(delimiter, singleline, outclass) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        stream.eatWhile(/[^'\"\\/\\\\]/);\n        if (stream.eat(\"\\\\\")) {\n          stream.next();\n          if (singleline && stream.eol()) {\n            return outclass;\n          }\n        } else if (stream.match(delimiter)) {\n          state.tokenize = tokenBase;\n          return outclass;\n        } else {\n          stream.eat(/['\"\\/]/);\n        }\n      }\n      if (singleline) {\n        if (parserConf.singleLineStringErrors) {\n          outclass = ERRORCLASS;\n        } else {\n          state.tokenize = tokenBase;\n        }\n      }\n      return outclass;\n    };\n  }\n\n  function longComment(stream, state) {\n    while (!stream.eol()) {\n      stream.eatWhile(/[^#]/);\n      if (stream.match(\"###\")) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      stream.eatWhile(\"#\");\n    }\n    return \"comment\";\n  }\n\n  function indent(stream, state, type) {\n    type = type || \"coffee\";\n    var offset = 0, align = false, alignOffset = null;\n    for (var scope = state.scope; scope; scope = scope.prev) {\n      if (scope.type === \"coffee\" || scope.type == \"}\") {\n        offset = scope.offset + conf.indentUnit;\n        break;\n      }\n    }\n    if (type !== \"coffee\") {\n      align = null;\n      alignOffset = stream.column() + stream.current().length;\n    } else if (state.scope.align) {\n      state.scope.align = false;\n    }\n    state.scope = {\n      offset: offset,\n      type: type,\n      prev: state.scope,\n      align: align,\n      alignOffset: alignOffset\n    };\n  }\n\n  function dedent(stream, state) {\n    if (!state.scope.prev) return;\n    if (state.scope.type === \"coffee\") {\n      var _indent = stream.indentation();\n      var matched = false;\n      for (var scope = state.scope; scope; scope = scope.prev) {\n        if (_indent === scope.offset) {\n          matched = true;\n          break;\n        }\n      }\n      if (!matched) {\n        return true;\n      }\n      while (state.scope.prev && state.scope.offset !== _indent) {\n        state.scope = state.scope.prev;\n      }\n      return false;\n    } else {\n      state.scope = state.scope.prev;\n      return false;\n    }\n  }\n\n  function tokenLexer(stream, state) {\n    var style = state.tokenize(stream, state);\n    var current = stream.current();\n\n    // Handle scope changes.\n    if (current === \"return\") {\n      state.dedent = true;\n    }\n    if (((current === \"->\" || current === \"=>\") && stream.eol())\n        || style === \"indent\") {\n      indent(stream, state);\n    }\n    var delimiter_index = \"[({\".indexOf(current);\n    if (delimiter_index !== -1) {\n      indent(stream, state, \"])}\".slice(delimiter_index, delimiter_index+1));\n    }\n    if (indentKeywords.exec(current)){\n      indent(stream, state);\n    }\n    if (current == \"then\"){\n      dedent(stream, state);\n    }\n\n\n    if (style === \"dedent\") {\n      if (dedent(stream, state)) {\n        return ERRORCLASS;\n      }\n    }\n    delimiter_index = \"])}\".indexOf(current);\n    if (delimiter_index !== -1) {\n      while (state.scope.type == \"coffee\" && state.scope.prev)\n        state.scope = state.scope.prev;\n      if (state.scope.type == current)\n        state.scope = state.scope.prev;\n    }\n    if (state.dedent && stream.eol()) {\n      if (state.scope.type == \"coffee\" && state.scope.prev)\n        state.scope = state.scope.prev;\n      state.dedent = false;\n    }\n\n    return style;\n  }\n\n  var external = {\n    startState: function(basecolumn) {\n      return {\n        tokenize: tokenBase,\n        scope: {offset:basecolumn || 0, type:\"coffee\", prev: null, align: false},\n        prop: false,\n        dedent: 0\n      };\n    },\n\n    token: function(stream, state) {\n      var fillAlign = state.scope.align === null && state.scope;\n      if (fillAlign && stream.sol()) fillAlign.align = false;\n\n      var style = tokenLexer(stream, state);\n      if (style && style != \"comment\") {\n        if (fillAlign) fillAlign.align = true;\n        state.prop = style == \"punctuation\" && stream.current() == \".\"\n      }\n\n      return style;\n    },\n\n    indent: function(state, text) {\n      if (state.tokenize != tokenBase) return 0;\n      var scope = state.scope;\n      var closer = text && \"])}\".indexOf(text.charAt(0)) > -1;\n      if (closer) while (scope.type == \"coffee\" && scope.prev) scope = scope.prev;\n      var closes = closer && scope.type === text.charAt(0);\n      if (scope.align)\n        return scope.alignOffset - (closes ? 1 : 0);\n      else\n        return (closes ? scope.prev : scope).offset;\n    },\n\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n  return external;\n});\n\n// IANA registered media type\n// https://www.iana.org/assignments/media-types/\nCodeMirror.defineMIME(\"application/vnd.coffeescript\", \"coffeescript\");\n\nCodeMirror.defineMIME(\"text/x-coffeescript\", \"coffeescript\");\nCodeMirror.defineMIME(\"text/coffeescript\", \"coffeescript\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../addon/mode/simple\"), require(\"../../addon/mode/multiplex\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../addon/mode/simple\", \"../../addon/mode/multiplex\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode(\"handlebars-tags\", {\n    start: [\n      { regex: /\\{\\{\\{/, push: \"handlebars_raw\", token: \"tag\" },\n      { regex: /\\{\\{!--/, push: \"dash_comment\", token: \"comment\" },\n      { regex: /\\{\\{!/,   push: \"comment\", token: \"comment\" },\n      { regex: /\\{\\{/,    push: \"handlebars\", token: \"tag\" }\n    ],\n    handlebars_raw: [\n      { regex: /\\}\\}\\}/, pop: true, token: \"tag\" },\n    ],\n    handlebars: [\n      { regex: /\\}\\}/, pop: true, token: \"tag\" },\n\n      // Double and single quotes\n      { regex: /\"(?:[^\\\\\"]|\\\\.)*\"?/, token: \"string\" },\n      { regex: /'(?:[^\\\\']|\\\\.)*'?/, token: \"string\" },\n\n      // Handlebars keywords\n      { regex: />|[#\\/]([A-Za-z_]\\w*)/, token: \"keyword\" },\n      { regex: /(?:else|this)\\b/, token: \"keyword\" },\n\n      // Numeral\n      { regex: /\\d+/i, token: \"number\" },\n\n      // Atoms like = and .\n      { regex: /=|~|@|true|false/, token: \"atom\" },\n\n      // Paths\n      { regex: /(?:\\.\\.\\/)*(?:[A-Za-z_][\\w\\.]*)+/, token: \"variable-2\" }\n    ],\n    dash_comment: [\n      { regex: /--\\}\\}/, pop: true, token: \"comment\" },\n\n      // Commented code\n      { regex: /./, token: \"comment\"}\n    ],\n    comment: [\n      { regex: /\\}\\}/, pop: true, token: \"comment\" },\n      { regex: /./, token: \"comment\" }\n    ],\n    meta: {\n      blockCommentStart: \"{{--\",\n      blockCommentEnd: \"--}}\"\n    }\n  });\n\n  CodeMirror.defineMode(\"handlebars\", function(config, parserConfig) {\n    var handlebars = CodeMirror.getMode(config, \"handlebars-tags\");\n    if (!parserConfig || !parserConfig.base) return handlebars;\n    return CodeMirror.multiplexingMode(\n      CodeMirror.getMode(config, parserConfig.base),\n      {open: \"{{\", close: /\\}\\}\\}?/, mode: handlebars, parseDelimiters: true}\n    );\n  });\n\n  CodeMirror.defineMIME(\"text/x-handlebars-template\", \"handlebars\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"haskell\", function(_config, modeConfig) {\n\n  function switchState(source, setState, f) {\n    setState(f);\n    return f(source, setState);\n  }\n\n  // These should all be Unicode extended, as per the Haskell 2010 report\n  var smallRE = /[a-z_]/;\n  var largeRE = /[A-Z]/;\n  var digitRE = /\\d/;\n  var hexitRE = /[0-9A-Fa-f]/;\n  var octitRE = /[0-7]/;\n  var idRE = /[a-z_A-Z0-9'\\xa1-\\uffff]/;\n  var symbolRE = /[-!#$%&*+.\\/<=>?@\\\\^|~:]/;\n  var specialRE = /[(),;[\\]`{}]/;\n  var whiteCharRE = /[ \\t\\v\\f]/; // newlines are handled in tokenizer\n\n  function normal(source, setState) {\n    if (source.eatWhile(whiteCharRE)) {\n      return null;\n    }\n\n    var ch = source.next();\n    if (specialRE.test(ch)) {\n      if (ch == '{' && source.eat('-')) {\n        var t = \"comment\";\n        if (source.eat('#')) {\n          t = \"meta\";\n        }\n        return switchState(source, setState, ncomment(t, 1));\n      }\n      return null;\n    }\n\n    if (ch == '\\'') {\n      if (source.eat('\\\\')) {\n        source.next();  // should handle other escapes here\n      }\n      else {\n        source.next();\n      }\n      if (source.eat('\\'')) {\n        return \"string\";\n      }\n      return \"string error\";\n    }\n\n    if (ch == '\"') {\n      return switchState(source, setState, stringLiteral);\n    }\n\n    if (largeRE.test(ch)) {\n      source.eatWhile(idRE);\n      if (source.eat('.')) {\n        return \"qualifier\";\n      }\n      return \"variable-2\";\n    }\n\n    if (smallRE.test(ch)) {\n      source.eatWhile(idRE);\n      return \"variable\";\n    }\n\n    if (digitRE.test(ch)) {\n      if (ch == '0') {\n        if (source.eat(/[xX]/)) {\n          source.eatWhile(hexitRE); // should require at least 1\n          return \"integer\";\n        }\n        if (source.eat(/[oO]/)) {\n          source.eatWhile(octitRE); // should require at least 1\n          return \"number\";\n        }\n      }\n      source.eatWhile(digitRE);\n      var t = \"number\";\n      if (source.match(/^\\.\\d+/)) {\n        t = \"number\";\n      }\n      if (source.eat(/[eE]/)) {\n        t = \"number\";\n        source.eat(/[-+]/);\n        source.eatWhile(digitRE); // should require at least 1\n      }\n      return t;\n    }\n\n    if (ch == \".\" && source.eat(\".\"))\n      return \"keyword\";\n\n    if (symbolRE.test(ch)) {\n      if (ch == '-' && source.eat(/-/)) {\n        source.eatWhile(/-/);\n        if (!source.eat(symbolRE)) {\n          source.skipToEnd();\n          return \"comment\";\n        }\n      }\n      var t = \"variable\";\n      if (ch == ':') {\n        t = \"variable-2\";\n      }\n      source.eatWhile(symbolRE);\n      return t;\n    }\n\n    return \"error\";\n  }\n\n  function ncomment(type, nest) {\n    if (nest == 0) {\n      return normal;\n    }\n    return function(source, setState) {\n      var currNest = nest;\n      while (!source.eol()) {\n        var ch = source.next();\n        if (ch == '{' && source.eat('-')) {\n          ++currNest;\n        }\n        else if (ch == '-' && source.eat('}')) {\n          --currNest;\n          if (currNest == 0) {\n            setState(normal);\n            return type;\n          }\n        }\n      }\n      setState(ncomment(type, currNest));\n      return type;\n    };\n  }\n\n  function stringLiteral(source, setState) {\n    while (!source.eol()) {\n      var ch = source.next();\n      if (ch == '\"') {\n        setState(normal);\n        return \"string\";\n      }\n      if (ch == '\\\\') {\n        if (source.eol() || source.eat(whiteCharRE)) {\n          setState(stringGap);\n          return \"string\";\n        }\n        if (source.eat('&')) {\n        }\n        else {\n          source.next(); // should handle other escapes here\n        }\n      }\n    }\n    setState(normal);\n    return \"string error\";\n  }\n\n  function stringGap(source, setState) {\n    if (source.eat('\\\\')) {\n      return switchState(source, setState, stringLiteral);\n    }\n    source.next();\n    setState(normal);\n    return \"error\";\n  }\n\n\n  var wellKnownWords = (function() {\n    var wkw = {};\n    function setType(t) {\n      return function () {\n        for (var i = 0; i < arguments.length; i++)\n          wkw[arguments[i]] = t;\n      };\n    }\n\n    setType(\"keyword\")(\n      \"case\", \"class\", \"data\", \"default\", \"deriving\", \"do\", \"else\", \"foreign\",\n      \"if\", \"import\", \"in\", \"infix\", \"infixl\", \"infixr\", \"instance\", \"let\",\n      \"module\", \"newtype\", \"of\", \"then\", \"type\", \"where\", \"_\");\n\n    setType(\"keyword\")(\n      \"\\.\\.\", \":\", \"::\", \"=\", \"\\\\\", \"<-\", \"->\", \"@\", \"~\", \"=>\");\n\n    setType(\"builtin\")(\n      \"!!\", \"$!\", \"$\", \"&&\", \"+\", \"++\", \"-\", \".\", \"/\", \"/=\", \"<\", \"<*\", \"<=\",\n      \"<$>\", \"<*>\", \"=<<\", \"==\", \">\", \">=\", \">>\", \">>=\", \"^\", \"^^\", \"||\", \"*\",\n      \"*>\", \"**\");\n\n    setType(\"builtin\")(\n      \"Applicative\", \"Bool\", \"Bounded\", \"Char\", \"Double\", \"EQ\", \"Either\", \"Enum\",\n      \"Eq\", \"False\", \"FilePath\", \"Float\", \"Floating\", \"Fractional\", \"Functor\",\n      \"GT\", \"IO\", \"IOError\", \"Int\", \"Integer\", \"Integral\", \"Just\", \"LT\", \"Left\",\n      \"Maybe\", \"Monad\", \"Nothing\", \"Num\", \"Ord\", \"Ordering\", \"Rational\", \"Read\",\n      \"ReadS\", \"Real\", \"RealFloat\", \"RealFrac\", \"Right\", \"Show\", \"ShowS\",\n      \"String\", \"True\");\n\n    setType(\"builtin\")(\n      \"abs\", \"acos\", \"acosh\", \"all\", \"and\", \"any\", \"appendFile\", \"asTypeOf\",\n      \"asin\", \"asinh\", \"atan\", \"atan2\", \"atanh\", \"break\", \"catch\", \"ceiling\",\n      \"compare\", \"concat\", \"concatMap\", \"const\", \"cos\", \"cosh\", \"curry\",\n      \"cycle\", \"decodeFloat\", \"div\", \"divMod\", \"drop\", \"dropWhile\", \"either\",\n      \"elem\", \"encodeFloat\", \"enumFrom\", \"enumFromThen\", \"enumFromThenTo\",\n      \"enumFromTo\", \"error\", \"even\", \"exp\", \"exponent\", \"fail\", \"filter\",\n      \"flip\", \"floatDigits\", \"floatRadix\", \"floatRange\", \"floor\", \"fmap\",\n      \"foldl\", \"foldl1\", \"foldr\", \"foldr1\", \"fromEnum\", \"fromInteger\",\n      \"fromIntegral\", \"fromRational\", \"fst\", \"gcd\", \"getChar\", \"getContents\",\n      \"getLine\", \"head\", \"id\", \"init\", \"interact\", \"ioError\", \"isDenormalized\",\n      \"isIEEE\", \"isInfinite\", \"isNaN\", \"isNegativeZero\", \"iterate\", \"last\",\n      \"lcm\", \"length\", \"lex\", \"lines\", \"log\", \"logBase\", \"lookup\", \"map\",\n      \"mapM\", \"mapM_\", \"max\", \"maxBound\", \"maximum\", \"maybe\", \"min\", \"minBound\",\n      \"minimum\", \"mod\", \"negate\", \"not\", \"notElem\", \"null\", \"odd\", \"or\",\n      \"otherwise\", \"pi\", \"pred\", \"print\", \"product\", \"properFraction\", \"pure\",\n      \"putChar\", \"putStr\", \"putStrLn\", \"quot\", \"quotRem\", \"read\", \"readFile\",\n      \"readIO\", \"readList\", \"readLn\", \"readParen\", \"reads\", \"readsPrec\",\n      \"realToFrac\", \"recip\", \"rem\", \"repeat\", \"replicate\", \"return\", \"reverse\",\n      \"round\", \"scaleFloat\", \"scanl\", \"scanl1\", \"scanr\", \"scanr1\", \"seq\",\n      \"sequence\", \"sequence_\", \"show\", \"showChar\", \"showList\", \"showParen\",\n      \"showString\", \"shows\", \"showsPrec\", \"significand\", \"signum\", \"sin\",\n      \"sinh\", \"snd\", \"span\", \"splitAt\", \"sqrt\", \"subtract\", \"succ\", \"sum\",\n      \"tail\", \"take\", \"takeWhile\", \"tan\", \"tanh\", \"toEnum\", \"toInteger\",\n      \"toRational\", \"truncate\", \"uncurry\", \"undefined\", \"unlines\", \"until\",\n      \"unwords\", \"unzip\", \"unzip3\", \"userError\", \"words\", \"writeFile\", \"zip\",\n      \"zip3\", \"zipWith\", \"zipWith3\");\n\n    var override = modeConfig.overrideKeywords;\n    if (override) for (var word in override) if (override.hasOwnProperty(word))\n      wkw[word] = override[word];\n\n    return wkw;\n  })();\n\n\n\n  return {\n    startState: function ()  { return { f: normal }; },\n    copyState:  function (s) { return { f: s.f }; },\n\n    token: function(stream, state) {\n      var t = state.f(stream, function(s) { state.f = s; });\n      var w = stream.current();\n      return wellKnownWords.hasOwnProperty(w) ? wellKnownWords[w] : t;\n    },\n\n    blockCommentStart: \"{-\",\n    blockCommentEnd: \"-}\",\n    lineComment: \"--\"\n  };\n\n});\n\nCodeMirror.defineMIME(\"text/x-haskell\", \"haskell\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function wordRegexp(words) {\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n  }\n\n  var wordOperators = wordRegexp([\"and\", \"or\", \"not\", \"is\"]);\n  var commonKeywords = [\"as\", \"assert\", \"break\", \"class\", \"continue\",\n                        \"def\", \"del\", \"elif\", \"else\", \"except\", \"finally\",\n                        \"for\", \"from\", \"global\", \"if\", \"import\",\n                        \"lambda\", \"pass\", \"raise\", \"return\",\n                        \"try\", \"while\", \"with\", \"yield\", \"in\"];\n  var commonBuiltins = [\"abs\", \"all\", \"any\", \"bin\", \"bool\", \"bytearray\", \"callable\", \"chr\",\n                        \"classmethod\", \"compile\", \"complex\", \"delattr\", \"dict\", \"dir\", \"divmod\",\n                        \"enumerate\", \"eval\", \"filter\", \"float\", \"format\", \"frozenset\",\n                        \"getattr\", \"globals\", \"hasattr\", \"hash\", \"help\", \"hex\", \"id\",\n                        \"input\", \"int\", \"isinstance\", \"issubclass\", \"iter\", \"len\",\n                        \"list\", \"locals\", \"map\", \"max\", \"memoryview\", \"min\", \"next\",\n                        \"object\", \"oct\", \"open\", \"ord\", \"pow\", \"property\", \"range\",\n                        \"repr\", \"reversed\", \"round\", \"set\", \"setattr\", \"slice\",\n                        \"sorted\", \"staticmethod\", \"str\", \"sum\", \"super\", \"tuple\",\n                        \"type\", \"vars\", \"zip\", \"__import__\", \"NotImplemented\",\n                        \"Ellipsis\", \"__debug__\"];\n  CodeMirror.registerHelper(\"hintWords\", \"python\", commonKeywords.concat(commonBuiltins));\n\n  function top(state) {\n    return state.scopes[state.scopes.length - 1];\n  }\n\n  CodeMirror.defineMode(\"python\", function(conf, parserConf) {\n    var ERRORCLASS = \"error\";\n\n    var delimiters = parserConf.delimiters || parserConf.singleDelimiters || /^[\\(\\)\\[\\]\\{\\}@,:`=;\\.\\\\]/;\n    //               (Backwards-compatibility with old, cumbersome config system)\n    var operators = [parserConf.singleOperators, parserConf.doubleOperators, parserConf.doubleDelimiters, parserConf.tripleDelimiters,\n                     parserConf.operators || /^([-+*/%\\/&|^]=?|[<>=]+|\\/\\/=?|\\*\\*=?|!=|[~!@]|\\.\\.\\.)/]\n    for (var i = 0; i < operators.length; i++) if (!operators[i]) operators.splice(i--, 1)\n\n    var hangingIndent = parserConf.hangingIndent || conf.indentUnit;\n\n    var myKeywords = commonKeywords, myBuiltins = commonBuiltins;\n    if (parserConf.extra_keywords != undefined)\n      myKeywords = myKeywords.concat(parserConf.extra_keywords);\n\n    if (parserConf.extra_builtins != undefined)\n      myBuiltins = myBuiltins.concat(parserConf.extra_builtins);\n\n    var py3 = !(parserConf.version && Number(parserConf.version) < 3)\n    if (py3) {\n      // since http://legacy.python.org/dev/peps/pep-0465/ @ is also an operator\n      var identifiers = parserConf.identifiers|| /^[_A-Za-z\\u00A1-\\uFFFF][_A-Za-z0-9\\u00A1-\\uFFFF]*/;\n      myKeywords = myKeywords.concat([\"nonlocal\", \"False\", \"True\", \"None\", \"async\", \"await\"]);\n      myBuiltins = myBuiltins.concat([\"ascii\", \"bytes\", \"exec\", \"print\"]);\n      var stringPrefixes = new RegExp(\"^(([rbuf]|(br)|(fr))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n    } else {\n      var identifiers = parserConf.identifiers|| /^[_A-Za-z][_A-Za-z0-9]*/;\n      myKeywords = myKeywords.concat([\"exec\", \"print\"]);\n      myBuiltins = myBuiltins.concat([\"apply\", \"basestring\", \"buffer\", \"cmp\", \"coerce\", \"execfile\",\n                                      \"file\", \"intern\", \"long\", \"raw_input\", \"reduce\", \"reload\",\n                                      \"unichr\", \"unicode\", \"xrange\", \"False\", \"True\", \"None\"]);\n      var stringPrefixes = new RegExp(\"^(([rubf]|(ur)|(br))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n    }\n    var keywords = wordRegexp(myKeywords);\n    var builtins = wordRegexp(myBuiltins);\n\n    // tokenizers\n    function tokenBase(stream, state) {\n      var sol = stream.sol() && state.lastToken != \"\\\\\"\n      if (sol) state.indent = stream.indentation()\n      // Handle scope changes\n      if (sol && top(state).type == \"py\") {\n        var scopeOffset = top(state).offset;\n        if (stream.eatSpace()) {\n          var lineOffset = stream.indentation();\n          if (lineOffset > scopeOffset)\n            pushPyScope(state);\n          else if (lineOffset < scopeOffset && dedent(stream, state) && stream.peek() != \"#\")\n            state.errorToken = true;\n          return null;\n        } else {\n          var style = tokenBaseInner(stream, state);\n          if (scopeOffset > 0 && dedent(stream, state))\n            style += \" \" + ERRORCLASS;\n          return style;\n        }\n      }\n      return tokenBaseInner(stream, state);\n    }\n\n    function tokenBaseInner(stream, state, inFormat) {\n      if (stream.eatSpace()) return null;\n\n      // Handle Comments\n      if (!inFormat && stream.match(/^#.*/)) return \"comment\";\n\n      // Handle Number Literals\n      if (stream.match(/^[0-9\\.]/, false)) {\n        var floatLiteral = false;\n        // Floats\n        if (stream.match(/^[\\d_]*\\.\\d+(e[\\+\\-]?\\d+)?/i)) { floatLiteral = true; }\n        if (stream.match(/^[\\d_]+\\.\\d*/)) { floatLiteral = true; }\n        if (stream.match(/^\\.\\d+/)) { floatLiteral = true; }\n        if (floatLiteral) {\n          // Float literals may be \"imaginary\"\n          stream.eat(/J/i);\n          return \"number\";\n        }\n        // Integers\n        var intLiteral = false;\n        // Hex\n        if (stream.match(/^0x[0-9a-f_]+/i)) intLiteral = true;\n        // Binary\n        if (stream.match(/^0b[01_]+/i)) intLiteral = true;\n        // Octal\n        if (stream.match(/^0o[0-7_]+/i)) intLiteral = true;\n        // Decimal\n        if (stream.match(/^[1-9][\\d_]*(e[\\+\\-]?[\\d_]+)?/)) {\n          // Decimal literals may be \"imaginary\"\n          stream.eat(/J/i);\n          // TODO - Can you have imaginary longs?\n          intLiteral = true;\n        }\n        // Zero by itself with no other piece of number.\n        if (stream.match(/^0(?![\\dx])/i)) intLiteral = true;\n        if (intLiteral) {\n          // Integer literals may be \"long\"\n          stream.eat(/L/i);\n          return \"number\";\n        }\n      }\n\n      // Handle Strings\n      if (stream.match(stringPrefixes)) {\n        var isFmtString = stream.current().toLowerCase().indexOf('f') !== -1;\n        if (!isFmtString) {\n          state.tokenize = tokenStringFactory(stream.current(), state.tokenize);\n          return state.tokenize(stream, state);\n        } else {\n          state.tokenize = formatStringFactory(stream.current(), state.tokenize);\n          return state.tokenize(stream, state);\n        }\n      }\n\n      for (var i = 0; i < operators.length; i++)\n        if (stream.match(operators[i])) return \"operator\"\n\n      if (stream.match(delimiters)) return \"punctuation\";\n\n      if (state.lastToken == \".\" && stream.match(identifiers))\n        return \"property\";\n\n      if (stream.match(keywords) || stream.match(wordOperators))\n        return \"keyword\";\n\n      if (stream.match(builtins))\n        return \"builtin\";\n\n      if (stream.match(/^(self|cls)\\b/))\n        return \"variable-2\";\n\n      if (stream.match(identifiers)) {\n        if (state.lastToken == \"def\" || state.lastToken == \"class\")\n          return \"def\";\n        return \"variable\";\n      }\n\n      // Handle non-detected items\n      stream.next();\n      return inFormat ? null :ERRORCLASS;\n    }\n\n    function formatStringFactory(delimiter, tokenOuter) {\n      while (\"rubf\".indexOf(delimiter.charAt(0).toLowerCase()) >= 0)\n        delimiter = delimiter.substr(1);\n\n      var singleline = delimiter.length == 1;\n      var OUTCLASS = \"string\";\n\n      function tokenNestedExpr(depth) {\n        return function(stream, state) {\n          var inner = tokenBaseInner(stream, state, true)\n          if (inner == \"punctuation\") {\n            if (stream.current() == \"{\") {\n              state.tokenize = tokenNestedExpr(depth + 1)\n            } else if (stream.current() == \"}\") {\n              if (depth > 1) state.tokenize = tokenNestedExpr(depth - 1)\n              else state.tokenize = tokenString\n            }\n          }\n          return inner\n        }\n      }\n\n      function tokenString(stream, state) {\n        while (!stream.eol()) {\n          stream.eatWhile(/[^'\"\\{\\}\\\\]/);\n          if (stream.eat(\"\\\\\")) {\n            stream.next();\n            if (singleline && stream.eol())\n              return OUTCLASS;\n          } else if (stream.match(delimiter)) {\n            state.tokenize = tokenOuter;\n            return OUTCLASS;\n          } else if (stream.match('{{')) {\n            // ignore {{ in f-str\n            return OUTCLASS;\n          } else if (stream.match('{', false)) {\n            // switch to nested mode\n            state.tokenize = tokenNestedExpr(0)\n            if (stream.current()) return OUTCLASS;\n            else return state.tokenize(stream, state)\n          } else if (stream.match('}}')) {\n            return OUTCLASS;\n          } else if (stream.match('}')) {\n            // single } in f-string is an error\n            return ERRORCLASS;\n          } else {\n            stream.eat(/['\"]/);\n          }\n        }\n        if (singleline) {\n          if (parserConf.singleLineStringErrors)\n            return ERRORCLASS;\n          else\n            state.tokenize = tokenOuter;\n        }\n        return OUTCLASS;\n      }\n      tokenString.isString = true;\n      return tokenString;\n    }\n\n    function tokenStringFactory(delimiter, tokenOuter) {\n      while (\"rubf\".indexOf(delimiter.charAt(0).toLowerCase()) >= 0)\n        delimiter = delimiter.substr(1);\n\n      var singleline = delimiter.length == 1;\n      var OUTCLASS = \"string\";\n\n      function tokenString(stream, state) {\n        while (!stream.eol()) {\n          stream.eatWhile(/[^'\"\\\\]/);\n          if (stream.eat(\"\\\\\")) {\n            stream.next();\n            if (singleline && stream.eol())\n              return OUTCLASS;\n          } else if (stream.match(delimiter)) {\n            state.tokenize = tokenOuter;\n            return OUTCLASS;\n          } else {\n            stream.eat(/['\"]/);\n          }\n        }\n        if (singleline) {\n          if (parserConf.singleLineStringErrors)\n            return ERRORCLASS;\n          else\n            state.tokenize = tokenOuter;\n        }\n        return OUTCLASS;\n      }\n      tokenString.isString = true;\n      return tokenString;\n    }\n\n    function pushPyScope(state) {\n      while (top(state).type != \"py\") state.scopes.pop()\n      state.scopes.push({offset: top(state).offset + conf.indentUnit,\n                         type: \"py\",\n                         align: null})\n    }\n\n    function pushBracketScope(stream, state, type) {\n      var align = stream.match(/^[\\s\\[\\{\\(]*(?:#|$)/, false) ? null : stream.column() + 1\n      state.scopes.push({offset: state.indent + hangingIndent,\n                         type: type,\n                         align: align})\n    }\n\n    function dedent(stream, state) {\n      var indented = stream.indentation();\n      while (state.scopes.length > 1 && top(state).offset > indented) {\n        if (top(state).type != \"py\") return true;\n        state.scopes.pop();\n      }\n      return top(state).offset != indented;\n    }\n\n    function tokenLexer(stream, state) {\n      if (stream.sol()) {\n        state.beginningOfLine = true;\n        state.dedent = false;\n      }\n\n      var style = state.tokenize(stream, state);\n      var current = stream.current();\n\n      // Handle decorators\n      if (state.beginningOfLine && current == \"@\")\n        return stream.match(identifiers, false) ? \"meta\" : py3 ? \"operator\" : ERRORCLASS;\n\n      if (/\\S/.test(current)) state.beginningOfLine = false;\n\n      if ((style == \"variable\" || style == \"builtin\")\n          && state.lastToken == \"meta\")\n        style = \"meta\";\n\n      // Handle scope changes.\n      if (current == \"pass\" || current == \"return\")\n        state.dedent = true;\n\n      if (current == \"lambda\") state.lambda = true;\n      if (current == \":\" && !state.lambda && top(state).type == \"py\" && stream.match(/^\\s*(?:#|$)/, false))\n        pushPyScope(state);\n\n      if (current.length == 1 && !/string|comment/.test(style)) {\n        var delimiter_index = \"[({\".indexOf(current);\n        if (delimiter_index != -1)\n          pushBracketScope(stream, state, \"])}\".slice(delimiter_index, delimiter_index+1));\n\n        delimiter_index = \"])}\".indexOf(current);\n        if (delimiter_index != -1) {\n          if (top(state).type == current) state.indent = state.scopes.pop().offset - hangingIndent\n          else return ERRORCLASS;\n        }\n      }\n      if (state.dedent && stream.eol() && top(state).type == \"py\" && state.scopes.length > 1)\n        state.scopes.pop();\n\n      return style;\n    }\n\n    var external = {\n      startState: function(basecolumn) {\n        return {\n          tokenize: tokenBase,\n          scopes: [{offset: basecolumn || 0, type: \"py\", align: null}],\n          indent: basecolumn || 0,\n          lastToken: null,\n          lambda: false,\n          dedent: 0\n        };\n      },\n\n      token: function(stream, state) {\n        var addErr = state.errorToken;\n        if (addErr) state.errorToken = false;\n        var style = tokenLexer(stream, state);\n\n        if (style && style != \"comment\")\n          state.lastToken = (style == \"keyword\" || style == \"punctuation\") ? stream.current() : style;\n        if (style == \"punctuation\") style = null;\n\n        if (stream.eol() && state.lambda)\n          state.lambda = false;\n        return addErr ? style + \" \" + ERRORCLASS : style;\n      },\n\n      indent: function(state, textAfter) {\n        if (state.tokenize != tokenBase)\n          return state.tokenize.isString ? CodeMirror.Pass : 0;\n\n        var scope = top(state)\n        var closing = scope.type == textAfter.charAt(0) ||\n            scope.type == \"py\" && !state.dedent && /^(else:|elif |except |finally:)/.test(textAfter)\n        if (scope.align != null)\n          return scope.align - (closing ? 1 : 0)\n        else\n          return scope.offset - (closing ? hangingIndent : 0)\n      },\n\n      electricInput: /^\\s*([\\}\\]\\)]|else:|elif |except |finally:)$/,\n      closeBrackets: {triples: \"'\\\"\"},\n      lineComment: \"#\",\n      fold: \"indent\"\n    };\n    return external;\n  });\n\n  CodeMirror.defineMIME(\"text/x-python\", \"python\");\n\n  var words = function(str) { return str.split(\" \"); };\n\n  CodeMirror.defineMIME(\"text/x-cython\", {\n    name: \"python\",\n    extra_keywords: words(\"by cdef cimport cpdef ctypedef enum except \"+\n                          \"extern gil include nogil property public \"+\n                          \"readonly struct union DEF IF ELIF ELSE\")\n  });\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction wordObj(words) {\n  var o = {};\n  for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n  return o;\n}\n\nvar keywordList = [\n  \"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\",\n  \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\",\n  \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\",\n  \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\",\n  \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\",\n  \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"\n], keywords = wordObj(keywordList);\n\nvar indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\", \"then\",\n                           \"catch\", \"loop\", \"proc\", \"begin\"]);\nvar dedentWords = wordObj([\"end\", \"until\"]);\nvar opening = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\"};\nvar closing = {\"]\": \"[\", \"}\": \"{\", \")\": \"(\"};\n\nCodeMirror.defineMode(\"ruby\", function(config) {\n  var curPunc;\n\n  function chain(newtok, stream, state) {\n    state.tokenize.push(newtok);\n    return newtok(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n      state.tokenize.push(readBlockComment);\n      return \"comment\";\n    }\n    if (stream.eatSpace()) return null;\n    var ch = stream.next(), m;\n    if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n      return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n    } else if (ch == \"/\") {\n      if (regexpAhead(stream))\n        return chain(readQuoted(ch, \"string-2\", true), stream, state);\n      else\n        return \"operator\";\n    } else if (ch == \"%\") {\n      var style = \"string\", embed = true;\n      if (stream.eat(\"s\")) style = \"atom\";\n      else if (stream.eat(/[WQ]/)) style = \"string\";\n      else if (stream.eat(/[r]/)) style = \"string-2\";\n      else if (stream.eat(/[wxq]/)) { style = \"string\"; embed = false; }\n      var delim = stream.eat(/[^\\w\\s=]/);\n      if (!delim) return \"operator\";\n      if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n      return chain(readQuoted(delim, style, embed, true), stream, state);\n    } else if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n      return chain(readHereDoc(m[2], m[1]), stream, state);\n    } else if (ch == \"0\") {\n      if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);\n      else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);\n      else stream.eatWhile(/[0-7]/);\n      return \"number\";\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n      return \"number\";\n    } else if (ch == \"?\") {\n      while (stream.match(/^\\\\[CM]-/)) {}\n      if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);\n      else stream.next();\n      return \"string\";\n    } else if (ch == \":\") {\n      if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n      if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state);\n\n      // :> :>> :< :<< are valid symbols\n      if (stream.eat(/[\\<\\>]/)) {\n        stream.eat(/[\\<\\>]/);\n        return \"atom\";\n      }\n\n      // :+ :- :/ :* :| :& :! are valid symbols\n      if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n        return \"atom\";\n      }\n\n      // Symbols can't start by a digit\n      if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n        stream.eatWhile(/[\\w$\\xa1-\\uffff]/);\n        // Only one ? ! = is allowed and only as the last character\n        stream.eat(/[\\?\\!\\=]/);\n        return \"atom\";\n      }\n      return \"operator\";\n    } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n      stream.eat(\"@\");\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      return \"variable-2\";\n    } else if (ch == \"$\") {\n      if (stream.eat(/[a-zA-Z_]/)) {\n        stream.eatWhile(/[\\w]/);\n      } else if (stream.eat(/\\d/)) {\n        stream.eat(/\\d/);\n      } else {\n        stream.next(); // Must be a special global like $: or $!\n      }\n      return \"variable-3\";\n    } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      stream.eat(/[\\?\\!]/);\n      if (stream.eat(\":\")) return \"atom\";\n      return \"ident\";\n    } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n      curPunc = \"|\";\n      return null;\n    } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    } else if (ch == \"-\" && stream.eat(\">\")) {\n      return \"arrow\";\n    } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n      var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n      if (ch == \".\" && !more) curPunc = \".\";\n      return \"operator\";\n    } else {\n      return null;\n    }\n  }\n\n  function regexpAhead(stream) {\n    var start = stream.pos, depth = 0, next, found = false, escaped = false\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (\"[{(\".indexOf(next) > -1) {\n          depth++\n        } else if (\"]})\".indexOf(next) > -1) {\n          depth--\n          if (depth < 0) break\n        } else if (next == \"/\" && depth == 0) {\n          found = true\n          break\n        }\n        escaped = next == \"\\\\\"\n      } else {\n        escaped = false\n      }\n    }\n    stream.backUp(stream.pos - start)\n    return found\n  }\n\n  function tokenBaseUntilBrace(depth) {\n    if (!depth) depth = 1;\n    return function(stream, state) {\n      if (stream.peek() == \"}\") {\n        if (depth == 1) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length-1](stream, state);\n        } else {\n          state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n        }\n      } else if (stream.peek() == \"{\") {\n        state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n      }\n      return tokenBase(stream, state);\n    };\n  }\n  function tokenBaseOnce() {\n    var alreadyCalled = false;\n    return function(stream, state) {\n      if (alreadyCalled) {\n        state.tokenize.pop();\n        return state.tokenize[state.tokenize.length-1](stream, state);\n      }\n      alreadyCalled = true;\n      return tokenBase(stream, state);\n    };\n  }\n  function readQuoted(quote, style, embed, unescaped) {\n    return function(stream, state) {\n      var escaped = false, ch;\n\n      if (state.context.type === 'read-quoted-paused') {\n        state.context = state.context.prev;\n        stream.eat(\"}\");\n      }\n\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && (unescaped || !escaped)) {\n          state.tokenize.pop();\n          break;\n        }\n        if (embed && ch == \"#\" && !escaped) {\n          if (stream.eat(\"{\")) {\n            if (quote == \"}\") {\n              state.context = {prev: state.context, type: 'read-quoted-paused'};\n            }\n            state.tokenize.push(tokenBaseUntilBrace());\n            break;\n          } else if (/[@\\$]/.test(stream.peek())) {\n            state.tokenize.push(tokenBaseOnce());\n            break;\n          }\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      return style;\n    };\n  }\n  function readHereDoc(phrase, mayIndent) {\n    return function(stream, state) {\n      if (mayIndent) stream.eatSpace()\n      if (stream.match(phrase)) state.tokenize.pop();\n      else stream.skipToEnd();\n      return \"string\";\n    };\n  }\n  function readBlockComment(stream, state) {\n    if (stream.sol() && stream.match(\"=end\") && stream.eol())\n      state.tokenize.pop();\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: [tokenBase],\n              indented: 0,\n              context: {type: \"top\", indented: -config.indentUnit},\n              continuedLine: false,\n              lastTok: null,\n              varList: false};\n    },\n\n    token: function(stream, state) {\n      curPunc = null;\n      if (stream.sol()) state.indented = stream.indentation();\n      var style = state.tokenize[state.tokenize.length-1](stream, state), kwtype;\n      var thisTok = curPunc;\n      if (style == \"ident\") {\n        var word = stream.current();\n        style = state.lastTok == \".\" ? \"property\"\n          : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n          : /^[A-Z]/.test(word) ? \"tag\"\n          : (state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList) ? \"def\"\n          : \"variable\";\n        if (style == \"keyword\") {\n          thisTok = word;\n          if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";\n          else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";\n          else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation())\n            kwtype = \"indent\";\n          else if (word == \"do\" && state.context.indented < state.indented)\n            kwtype = \"indent\";\n        }\n      }\n      if (curPunc || (style && style != \"comment\")) state.lastTok = thisTok;\n      if (curPunc == \"|\") state.varList = !state.varList;\n\n      if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc))\n        state.context = {prev: state.context, type: curPunc || style, indented: state.indented};\n      else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev)\n        state.context = state.context.prev;\n\n      if (stream.eol())\n        state.continuedLine = (curPunc == \"\\\\\" || style == \"operator\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize[state.tokenize.length-1] != tokenBase) return CodeMirror.Pass;\n      var firstChar = textAfter && textAfter.charAt(0);\n      var ct = state.context;\n      var closed = ct.type == closing[firstChar] ||\n        ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n      return ct.indented + (closed ? 0 : config.indentUnit) +\n        (state.continuedLine ? config.indentUnit : 0);\n    },\n\n    electricInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-ruby\", \"ruby\");\n\nCodeMirror.registerHelper(\"hintWords\", \"ruby\", keywordList);\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"sass\", function(config) {\n  var cssMode = CodeMirror.mimeModes[\"text/css\"];\n  var propertyKeywords = cssMode.propertyKeywords || {},\n      colorKeywords = cssMode.colorKeywords || {},\n      valueKeywords = cssMode.valueKeywords || {},\n      fontProperties = cssMode.fontProperties || {};\n\n  function tokenRegexp(words) {\n    return new RegExp(\"^\" + words.join(\"|\"));\n  }\n\n  var keywords = [\"true\", \"false\", \"null\", \"auto\"];\n  var keywordsRegexp = new RegExp(\"^\" + keywords.join(\"|\"));\n\n  var operators = [\"\\\\(\", \"\\\\)\", \"=\", \">\", \"<\", \"==\", \">=\", \"<=\", \"\\\\+\", \"-\",\n                   \"\\\\!=\", \"/\", \"\\\\*\", \"%\", \"and\", \"or\", \"not\", \";\",\"\\\\{\",\"\\\\}\",\":\"];\n  var opRegexp = tokenRegexp(operators);\n\n  var pseudoElementsRegexp = /^::?[a-zA-Z_][\\w\\-]*/;\n\n  var word;\n\n  function isEndLine(stream) {\n    return !stream.peek() || stream.match(/\\s+$/, false);\n  }\n\n  function urlTokens(stream, state) {\n    var ch = stream.peek();\n\n    if (ch === \")\") {\n      stream.next();\n      state.tokenizer = tokenBase;\n      return \"operator\";\n    } else if (ch === \"(\") {\n      stream.next();\n      stream.eatSpace();\n\n      return \"operator\";\n    } else if (ch === \"'\" || ch === '\"') {\n      state.tokenizer = buildStringTokenizer(stream.next());\n      return \"string\";\n    } else {\n      state.tokenizer = buildStringTokenizer(\")\", false);\n      return \"string\";\n    }\n  }\n  function comment(indentation, multiLine) {\n    return function(stream, state) {\n      if (stream.sol() && stream.indentation() <= indentation) {\n        state.tokenizer = tokenBase;\n        return tokenBase(stream, state);\n      }\n\n      if (multiLine && stream.skipTo(\"*/\")) {\n        stream.next();\n        stream.next();\n        state.tokenizer = tokenBase;\n      } else {\n        stream.skipToEnd();\n      }\n\n      return \"comment\";\n    };\n  }\n\n  function buildStringTokenizer(quote, greedy) {\n    if (greedy == null) { greedy = true; }\n\n    function stringTokenizer(stream, state) {\n      var nextChar = stream.next();\n      var peekChar = stream.peek();\n      var previousChar = stream.string.charAt(stream.pos-2);\n\n      var endingString = ((nextChar !== \"\\\\\" && peekChar === quote) || (nextChar === quote && previousChar !== \"\\\\\"));\n\n      if (endingString) {\n        if (nextChar !== quote && greedy) { stream.next(); }\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        state.tokenizer = tokenBase;\n        return \"string\";\n      } else if (nextChar === \"#\" && peekChar === \"{\") {\n        state.tokenizer = buildInterpolationTokenizer(stringTokenizer);\n        stream.next();\n        return \"operator\";\n      } else {\n        return \"string\";\n      }\n    }\n\n    return stringTokenizer;\n  }\n\n  function buildInterpolationTokenizer(currentTokenizer) {\n    return function(stream, state) {\n      if (stream.peek() === \"}\") {\n        stream.next();\n        state.tokenizer = currentTokenizer;\n        return \"operator\";\n      } else {\n        return tokenBase(stream, state);\n      }\n    };\n  }\n\n  function indent(state) {\n    if (state.indentCount == 0) {\n      state.indentCount++;\n      var lastScopeOffset = state.scopes[0].offset;\n      var currentOffset = lastScopeOffset + config.indentUnit;\n      state.scopes.unshift({ offset:currentOffset });\n    }\n  }\n\n  function dedent(state) {\n    if (state.scopes.length == 1) return;\n\n    state.scopes.shift();\n  }\n\n  function tokenBase(stream, state) {\n    var ch = stream.peek();\n\n    // Comment\n    if (stream.match(\"/*\")) {\n      state.tokenizer = comment(stream.indentation(), true);\n      return state.tokenizer(stream, state);\n    }\n    if (stream.match(\"//\")) {\n      state.tokenizer = comment(stream.indentation(), false);\n      return state.tokenizer(stream, state);\n    }\n\n    // Interpolation\n    if (stream.match(\"#{\")) {\n      state.tokenizer = buildInterpolationTokenizer(tokenBase);\n      return \"operator\";\n    }\n\n    // Strings\n    if (ch === '\"' || ch === \"'\") {\n      stream.next();\n      state.tokenizer = buildStringTokenizer(ch);\n      return \"string\";\n    }\n\n    if(!state.cursorHalf){// state.cursorHalf === 0\n    // first half i.e. before : for key-value pairs\n    // including selectors\n\n      if (ch === \"-\") {\n        if (stream.match(/^-\\w+-/)) {\n          return \"meta\";\n        }\n      }\n\n      if (ch === \".\") {\n        stream.next();\n        if (stream.match(/^[\\w-]+/)) {\n          indent(state);\n          return \"qualifier\";\n        } else if (stream.peek() === \"#\") {\n          indent(state);\n          return \"tag\";\n        }\n      }\n\n      if (ch === \"#\") {\n        stream.next();\n        // ID selectors\n        if (stream.match(/^[\\w-]+/)) {\n          indent(state);\n          return \"builtin\";\n        }\n        if (stream.peek() === \"#\") {\n          indent(state);\n          return \"tag\";\n        }\n      }\n\n      // Variables\n      if (ch === \"$\") {\n        stream.next();\n        stream.eatWhile(/[\\w-]/);\n        return \"variable-2\";\n      }\n\n      // Numbers\n      if (stream.match(/^-?[0-9\\.]+/))\n        return \"number\";\n\n      // Units\n      if (stream.match(/^(px|em|in)\\b/))\n        return \"unit\";\n\n      if (stream.match(keywordsRegexp))\n        return \"keyword\";\n\n      if (stream.match(/^url/) && stream.peek() === \"(\") {\n        state.tokenizer = urlTokens;\n        return \"atom\";\n      }\n\n      if (ch === \"=\") {\n        // Match shortcut mixin definition\n        if (stream.match(/^=[\\w-]+/)) {\n          indent(state);\n          return \"meta\";\n        }\n      }\n\n      if (ch === \"+\") {\n        // Match shortcut mixin definition\n        if (stream.match(/^\\+[\\w-]+/)){\n          return \"variable-3\";\n        }\n      }\n\n      if(ch === \"@\"){\n        if(stream.match('@extend')){\n          if(!stream.match(/\\s*[\\w]/))\n            dedent(state);\n        }\n      }\n\n\n      // Indent Directives\n      if (stream.match(/^@(else if|if|media|else|for|each|while|mixin|function)/)) {\n        indent(state);\n        return \"def\";\n      }\n\n      // Other Directives\n      if (ch === \"@\") {\n        stream.next();\n        stream.eatWhile(/[\\w-]/);\n        return \"def\";\n      }\n\n      if (stream.eatWhile(/[\\w-]/)){\n        if(stream.match(/ *: *[\\w-\\+\\$#!\\(\"']/,false)){\n          word = stream.current().toLowerCase();\n          var prop = state.prevProp + \"-\" + word;\n          if (propertyKeywords.hasOwnProperty(prop)) {\n            return \"property\";\n          } else if (propertyKeywords.hasOwnProperty(word)) {\n            state.prevProp = word;\n            return \"property\";\n          } else if (fontProperties.hasOwnProperty(word)) {\n            return \"property\";\n          }\n          return \"tag\";\n        }\n        else if(stream.match(/ *:/,false)){\n          indent(state);\n          state.cursorHalf = 1;\n          state.prevProp = stream.current().toLowerCase();\n          return \"property\";\n        }\n        else if(stream.match(/ *,/,false)){\n          return \"tag\";\n        }\n        else{\n          indent(state);\n          return \"tag\";\n        }\n      }\n\n      if(ch === \":\"){\n        if (stream.match(pseudoElementsRegexp)){ // could be a pseudo-element\n          return \"variable-3\";\n        }\n        stream.next();\n        state.cursorHalf=1;\n        return \"operator\";\n      }\n\n    } // cursorHalf===0 ends here\n    else{\n\n      if (ch === \"#\") {\n        stream.next();\n        // Hex numbers\n        if (stream.match(/[0-9a-fA-F]{6}|[0-9a-fA-F]{3}/)){\n          if (isEndLine(stream)) {\n            state.cursorHalf = 0;\n          }\n          return \"number\";\n        }\n      }\n\n      // Numbers\n      if (stream.match(/^-?[0-9\\.]+/)){\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"number\";\n      }\n\n      // Units\n      if (stream.match(/^(px|em|in)\\b/)){\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"unit\";\n      }\n\n      if (stream.match(keywordsRegexp)){\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"keyword\";\n      }\n\n      if (stream.match(/^url/) && stream.peek() === \"(\") {\n        state.tokenizer = urlTokens;\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"atom\";\n      }\n\n      // Variables\n      if (ch === \"$\") {\n        stream.next();\n        stream.eatWhile(/[\\w-]/);\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"variable-2\";\n      }\n\n      // bang character for !important, !default, etc.\n      if (ch === \"!\") {\n        stream.next();\n        state.cursorHalf = 0;\n        return stream.match(/^[\\w]+/) ? \"keyword\": \"operator\";\n      }\n\n      if (stream.match(opRegexp)){\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        return \"operator\";\n      }\n\n      // attributes\n      if (stream.eatWhile(/[\\w-]/)) {\n        if (isEndLine(stream)) {\n          state.cursorHalf = 0;\n        }\n        word = stream.current().toLowerCase();\n        if (valueKeywords.hasOwnProperty(word)) {\n          return \"atom\";\n        } else if (colorKeywords.hasOwnProperty(word)) {\n          return \"keyword\";\n        } else if (propertyKeywords.hasOwnProperty(word)) {\n          state.prevProp = stream.current().toLowerCase();\n          return \"property\";\n        } else {\n          return \"tag\";\n        }\n      }\n\n      //stream.eatSpace();\n      if (isEndLine(stream)) {\n        state.cursorHalf = 0;\n        return null;\n      }\n\n    } // else ends here\n\n    if (stream.match(opRegexp))\n      return \"operator\";\n\n    // If we haven't returned by now, we move 1 character\n    // and return an error\n    stream.next();\n    return null;\n  }\n\n  function tokenLexer(stream, state) {\n    if (stream.sol()) state.indentCount = 0;\n    var style = state.tokenizer(stream, state);\n    var current = stream.current();\n\n    if (current === \"@return\" || current === \"}\"){\n      dedent(state);\n    }\n\n    if (style !== null) {\n      var startOfToken = stream.pos - current.length;\n\n      var withCurrentIndent = startOfToken + (config.indentUnit * state.indentCount);\n\n      var newScopes = [];\n\n      for (var i = 0; i < state.scopes.length; i++) {\n        var scope = state.scopes[i];\n\n        if (scope.offset <= withCurrentIndent)\n          newScopes.push(scope);\n      }\n\n      state.scopes = newScopes;\n    }\n\n\n    return style;\n  }\n\n  return {\n    startState: function() {\n      return {\n        tokenizer: tokenBase,\n        scopes: [{offset: 0, type: \"sass\"}],\n        indentCount: 0,\n        cursorHalf: 0,  // cursor half tells us if cursor lies after (1)\n                        // or before (0) colon (well... more or less)\n        definedVars: [],\n        definedMixins: []\n      };\n    },\n    token: function(stream, state) {\n      var style = tokenLexer(stream, state);\n\n      state.lastToken = { style: style, content: stream.current() };\n\n      return style;\n    },\n\n    indent: function(state) {\n      return state.scopes[0].offset;\n    },\n\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    lineComment: \"//\",\n    fold: \"indent\"\n  };\n}, \"css\");\n\nCodeMirror.defineMIME(\"text/x-sass\", \"sass\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/*\n * Author: Constantin Jucovschi (c.jucovschi@jacobs-university.de)\n * Licence: MIT\n */\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"stex\", function(_config, parserConfig) {\n    \"use strict\";\n\n    function pushCommand(state, command) {\n      state.cmdState.push(command);\n    }\n\n    function peekCommand(state) {\n      if (state.cmdState.length > 0) {\n        return state.cmdState[state.cmdState.length - 1];\n      } else {\n        return null;\n      }\n    }\n\n    function popCommand(state) {\n      var plug = state.cmdState.pop();\n      if (plug) {\n        plug.closeBracket();\n      }\n    }\n\n    // returns the non-default plugin closest to the end of the list\n    function getMostPowerful(state) {\n      var context = state.cmdState;\n      for (var i = context.length - 1; i >= 0; i--) {\n        var plug = context[i];\n        if (plug.name == \"DEFAULT\") {\n          continue;\n        }\n        return plug;\n      }\n      return { styleIdentifier: function() { return null; } };\n    }\n\n    function addPluginPattern(pluginName, cmdStyle, styles) {\n      return function () {\n        this.name = pluginName;\n        this.bracketNo = 0;\n        this.style = cmdStyle;\n        this.styles = styles;\n        this.argument = null;   // \\begin and \\end have arguments that follow. These are stored in the plugin\n\n        this.styleIdentifier = function() {\n          return this.styles[this.bracketNo - 1] || null;\n        };\n        this.openBracket = function() {\n          this.bracketNo++;\n          return \"bracket\";\n        };\n        this.closeBracket = function() {};\n      };\n    }\n\n    var plugins = {};\n\n    plugins[\"importmodule\"] = addPluginPattern(\"importmodule\", \"tag\", [\"string\", \"builtin\"]);\n    plugins[\"documentclass\"] = addPluginPattern(\"documentclass\", \"tag\", [\"\", \"atom\"]);\n    plugins[\"usepackage\"] = addPluginPattern(\"usepackage\", \"tag\", [\"atom\"]);\n    plugins[\"begin\"] = addPluginPattern(\"begin\", \"tag\", [\"atom\"]);\n    plugins[\"end\"] = addPluginPattern(\"end\", \"tag\", [\"atom\"]);\n\n    plugins[\"label\"    ] = addPluginPattern(\"label\"    , \"tag\", [\"atom\"]);\n    plugins[\"ref\"      ] = addPluginPattern(\"ref\"      , \"tag\", [\"atom\"]);\n    plugins[\"eqref\"    ] = addPluginPattern(\"eqref\"    , \"tag\", [\"atom\"]);\n    plugins[\"cite\"     ] = addPluginPattern(\"cite\"     , \"tag\", [\"atom\"]);\n    plugins[\"bibitem\"  ] = addPluginPattern(\"bibitem\"  , \"tag\", [\"atom\"]);\n    plugins[\"Bibitem\"  ] = addPluginPattern(\"Bibitem\"  , \"tag\", [\"atom\"]);\n    plugins[\"RBibitem\" ] = addPluginPattern(\"RBibitem\" , \"tag\", [\"atom\"]);\n\n    plugins[\"DEFAULT\"] = function () {\n      this.name = \"DEFAULT\";\n      this.style = \"tag\";\n\n      this.styleIdentifier = this.openBracket = this.closeBracket = function() {};\n    };\n\n    function setState(state, f) {\n      state.f = f;\n    }\n\n    // called when in a normal (no environment) context\n    function normal(source, state) {\n      var plug;\n      // Do we look like '\\command' ?  If so, attempt to apply the plugin 'command'\n      if (source.match(/^\\\\[a-zA-Z@]+/)) {\n        var cmdName = source.current().slice(1);\n        plug = plugins.hasOwnProperty(cmdName) ? plugins[cmdName] : plugins[\"DEFAULT\"];\n        plug = new plug();\n        pushCommand(state, plug);\n        setState(state, beginParams);\n        return plug.style;\n      }\n\n      // escape characters\n      if (source.match(/^\\\\[$&%#{}_]/)) {\n        return \"tag\";\n      }\n\n      // white space control characters\n      if (source.match(/^\\\\[,;!\\/\\\\]/)) {\n        return \"tag\";\n      }\n\n      // find if we're starting various math modes\n      if (source.match(\"\\\\[\")) {\n        setState(state, function(source, state){ return inMathMode(source, state, \"\\\\]\"); });\n        return \"keyword\";\n      }\n      if (source.match(\"\\\\(\")) {\n        setState(state, function(source, state){ return inMathMode(source, state, \"\\\\)\"); });\n        return \"keyword\";\n      }\n      if (source.match(\"$$\")) {\n        setState(state, function(source, state){ return inMathMode(source, state, \"$$\"); });\n        return \"keyword\";\n      }\n      if (source.match(\"$\")) {\n        setState(state, function(source, state){ return inMathMode(source, state, \"$\"); });\n        return \"keyword\";\n      }\n\n      var ch = source.next();\n      if (ch == \"%\") {\n        source.skipToEnd();\n        return \"comment\";\n      } else if (ch == '}' || ch == ']') {\n        plug = peekCommand(state);\n        if (plug) {\n          plug.closeBracket(ch);\n          setState(state, beginParams);\n        } else {\n          return \"error\";\n        }\n        return \"bracket\";\n      } else if (ch == '{' || ch == '[') {\n        plug = plugins[\"DEFAULT\"];\n        plug = new plug();\n        pushCommand(state, plug);\n        return \"bracket\";\n      } else if (/\\d/.test(ch)) {\n        source.eatWhile(/[\\w.%]/);\n        return \"atom\";\n      } else {\n        source.eatWhile(/[\\w\\-_]/);\n        plug = getMostPowerful(state);\n        if (plug.name == 'begin') {\n          plug.argument = source.current();\n        }\n        return plug.styleIdentifier();\n      }\n    }\n\n    function inMathMode(source, state, endModeSeq) {\n      if (source.eatSpace()) {\n        return null;\n      }\n      if (endModeSeq && source.match(endModeSeq)) {\n        setState(state, normal);\n        return \"keyword\";\n      }\n      if (source.match(/^\\\\[a-zA-Z@]+/)) {\n        return \"tag\";\n      }\n      if (source.match(/^[a-zA-Z]+/)) {\n        return \"variable-2\";\n      }\n      // escape characters\n      if (source.match(/^\\\\[$&%#{}_]/)) {\n        return \"tag\";\n      }\n      // white space control characters\n      if (source.match(/^\\\\[,;!\\/]/)) {\n        return \"tag\";\n      }\n      // special math-mode characters\n      if (source.match(/^[\\^_&]/)) {\n        return \"tag\";\n      }\n      // non-special characters\n      if (source.match(/^[+\\-<>|=,\\/@!*:;'\"`~#?]/)) {\n        return null;\n      }\n      if (source.match(/^(\\d+\\.\\d*|\\d*\\.\\d+|\\d+)/)) {\n        return \"number\";\n      }\n      var ch = source.next();\n      if (ch == \"{\" || ch == \"}\" || ch == \"[\" || ch == \"]\" || ch == \"(\" || ch == \")\") {\n        return \"bracket\";\n      }\n\n      if (ch == \"%\") {\n        source.skipToEnd();\n        return \"comment\";\n      }\n      return \"error\";\n    }\n\n    function beginParams(source, state) {\n      var ch = source.peek(), lastPlug;\n      if (ch == '{' || ch == '[') {\n        lastPlug = peekCommand(state);\n        lastPlug.openBracket(ch);\n        source.eat(ch);\n        setState(state, normal);\n        return \"bracket\";\n      }\n      if (/[ \\t\\r]/.test(ch)) {\n        source.eat(ch);\n        return null;\n      }\n      setState(state, normal);\n      popCommand(state);\n\n      return normal(source, state);\n    }\n\n    return {\n      startState: function() {\n        var f = parserConfig.inMathMode ? function(source, state){ return inMathMode(source, state); } : normal;\n        return {\n          cmdState: [],\n          f: f\n        };\n      },\n      copyState: function(s) {\n        return {\n          cmdState: s.cmdState.slice(),\n          f: s.f\n        };\n      },\n      token: function(stream, state) {\n        return state.f(stream, state);\n      },\n      blankLine: function(state) {\n        state.f = normal;\n        state.cmdState.length = 0;\n      },\n      lineComment: \"%\"\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-stex\", \"stex\");\n  CodeMirror.defineMIME(\"text/x-latex\", \"stex\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"yaml\", function() {\n\n  var cons = ['true', 'false', 'on', 'off', 'yes', 'no'];\n  var keywordRegex = new RegExp(\"\\\\b((\"+cons.join(\")|(\")+\"))$\", 'i');\n\n  return {\n    token: function(stream, state) {\n      var ch = stream.peek();\n      var esc = state.escaped;\n      state.escaped = false;\n      /* comments */\n      if (ch == \"#\" && (stream.pos == 0 || /\\s/.test(stream.string.charAt(stream.pos - 1)))) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n\n      if (stream.match(/^('([^']|\\\\.)*'?|\"([^\"]|\\\\.)*\"?)/))\n        return \"string\";\n\n      if (state.literal && stream.indentation() > state.keyCol) {\n        stream.skipToEnd(); return \"string\";\n      } else if (state.literal) { state.literal = false; }\n      if (stream.sol()) {\n        state.keyCol = 0;\n        state.pair = false;\n        state.pairStart = false;\n        /* document start */\n        if(stream.match('---')) { return \"def\"; }\n        /* document end */\n        if (stream.match('...')) { return \"def\"; }\n        /* array list item */\n        if (stream.match(/\\s*-\\s+/)) { return 'meta'; }\n      }\n      /* inline pairs/lists */\n      if (stream.match(/^(\\{|\\}|\\[|\\])/)) {\n        if (ch == '{')\n          state.inlinePairs++;\n        else if (ch == '}')\n          state.inlinePairs--;\n        else if (ch == '[')\n          state.inlineList++;\n        else\n          state.inlineList--;\n        return 'meta';\n      }\n\n      /* list separator */\n      if (state.inlineList > 0 && !esc && ch == ',') {\n        stream.next();\n        return 'meta';\n      }\n      /* pairs separator */\n      if (state.inlinePairs > 0 && !esc && ch == ',') {\n        state.keyCol = 0;\n        state.pair = false;\n        state.pairStart = false;\n        stream.next();\n        return 'meta';\n      }\n\n      /* start of value of a pair */\n      if (state.pairStart) {\n        /* block literals */\n        if (stream.match(/^\\s*(\\||\\>)\\s*/)) { state.literal = true; return 'meta'; };\n        /* references */\n        if (stream.match(/^\\s*(\\&|\\*)[a-z0-9\\._-]+\\b/i)) { return 'variable-2'; }\n        /* numbers */\n        if (state.inlinePairs == 0 && stream.match(/^\\s*-?[0-9\\.\\,]+\\s?$/)) { return 'number'; }\n        if (state.inlinePairs > 0 && stream.match(/^\\s*-?[0-9\\.\\,]+\\s?(?=(,|}))/)) { return 'number'; }\n        /* keywords */\n        if (stream.match(keywordRegex)) { return 'keyword'; }\n      }\n\n      /* pairs (associative arrays) -> key */\n      if (!state.pair && stream.match(/^\\s*(?:[,\\[\\]{}&*!|>'\"%@`][^\\s'\":]|[^,\\[\\]{}#&*!|>'\"%@`])[^#]*?(?=\\s*:($|\\s))/)) {\n        state.pair = true;\n        state.keyCol = stream.indentation();\n        return \"atom\";\n      }\n      if (state.pair && stream.match(/^:\\s*/)) { state.pairStart = true; return 'meta'; }\n\n      /* nothing found, continue */\n      state.pairStart = false;\n      state.escaped = (ch == '\\\\');\n      stream.next();\n      return null;\n    },\n    startState: function() {\n      return {\n        pair: false,\n        pairStart: false,\n        keyCol: 0,\n        inlinePairs: 0,\n        inlineList: 0,\n        literal: false,\n        escaped: false\n      };\n    },\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-yaml\", \"yaml\");\nCodeMirror.defineMIME(\"text/yaml\", \"yaml\");\n\n});\n","//-- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2022 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\n/******************************************\n  BACKLOG\n  A backlog is a visual representation of\n  a sprint and its stories. It is not a\n  sprint. Imagine it this way: A sprint is\n  a start and end date, and a set of\n  objectives. A backlog is something you\n  would draw up on the board or a spread-\n  sheet (or in Redmine Backlogs!) to\n  visualize the sprint.\n******************************************/\n\nRB.Backlog = (function ($) {\n  return RB.Object.create({\n\n    initialize: function (el) {\n      this.$ = $(el);\n      this.el = el;\n\n      // Associate this object with the element for later retrieval\n      this.$.data('this', this);\n\n      // Make the list sortable\n      this.getList().sortable({\n        connectWith: '.stories',\n        dropOnEmpty: true,\n        start:   this.dragStart,\n        stop:    this.dragStop,\n        update:  this.dragComplete,\n        receive: this.dragChanged,\n        remove:  this.dragChanged,\n        containment: $('#backlogs_container'),\n        scroll: true,\n        helper: function(event, ui){\n          var $clone =  $(ui).clone();\n          $clone .css('position','absolute');\n          return $clone.get(0);\n        }\n      });\n\n      // Observe menu items\n      this.$.find('.add_new_story').click(this.handleNewStoryClick);\n\n      if (this.isSprintBacklog()) {\n        RB.Factory.initialize(RB.Sprint, this.getSprint());\n        this.burndown = RB.Factory.initialize(RB.Burndown, this.$.find('.show_burndown_chart'));\n        this.burndown.setSprintId(this.getSprint().data('this').getID());\n      }\n\n      // Initialize each item in the backlog\n      this.getStories().each(function (index) {\n        // 'this' refers to an element with class=\"story\"\n        RB.Factory.initialize(RB.Story, this);\n      });\n\n      if (this.isSprintBacklog()) {\n        this.refresh();\n      }\n    },\n\n    dragChanged: function (e, ui) {\n      $(this).parents('.backlog').data('this').refresh();\n    },\n\n    dragComplete: function (e, ui) {\n      var isDropTarget = (ui.sender === null || ui.sender === undefined);\n\n      // jQuery triggers dragComplete of source and target.\n      // Thus we have to check here. Otherwise, the story\n      // would be saved twice.\n      if (isDropTarget) {\n        ui.item.data('this').saveDragResult();\n      }\n    },\n\n    dragStart: function (e, ui) {\n      ui.item.addClass(\"dragging\");\n    },\n\n    dragStop: function (e, ui) {\n      ui.item.removeClass(\"dragging\");\n    },\n\n    getSprint: function () {\n      return $(this.el).find(\".model.sprint\").first();\n    },\n\n    getStories: function () {\n      return this.getList().children(\".story\");\n    },\n\n    getList: function () {\n      return this.$.children(\".stories\").first();\n    },\n\n    handleNewStoryClick: function (e) {\n      var toggler = $(this).parents('.header').find('.toggler');\n      if (toggler.hasClass('closed')){\n        toggler.click();\n      }\n      e.preventDefault();\n      $(this).parents('.backlog').data('this').newStory();\n    },\n\n    // return true if backlog has an element with class=\"sprint\"\n    isSprintBacklog: function () {\n      return $(this.el).find('.sprint').length === 1;\n    },\n\n    newStory: function () {\n      var story, o;\n\n      story = $('#story_template').children().first().clone();\n      this.getList().prepend(story);\n\n      o = RB.Factory.initialize(RB.Story, story[0]);\n      o.edit();\n\n      story.find('.editor').first().focus();\n    },\n\n    refresh : function () {\n      this.recalcVelocity();\n      this.recalcOddity();\n    },\n\n    recalcVelocity: function () {\n      var total;\n\n      if (!this.isSprintBacklog()) {\n        return true;\n      }\n\n      total = 0;\n      this.getStories().each(function (index) {\n        total += $(this).data('this').getPoints();\n      });\n      this.$.children('.header').children('.velocity').text(total);\n    },\n\n    recalcOddity : function () {\n      this.$.find('.story:even').removeClass('odd').addClass('even');\n      this.$.find('.story:odd').removeClass('even').addClass('odd');\n    }\n  });\n}(jQuery));\n","//-- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2022 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nRB.Burndown = (function ($) {\n  return RB.Object.create({\n\n    initialize: function (el) {\n      this.$ = $(el);\n      this.el = el;\n\n      // Associate this object with the element for later retrieval\n      this.$.data('this', this);\n\n      // Observe menu items\n      this.$.click(this.show);\n    },\n\n    setSprintId : function (sprintId) {\n      this.sprintId = sprintId;\n    },\n\n    getSprintId : function (){\n      return this.sprintId;\n    },\n\n    show: function (e) {\n      e.preventDefault();\n\n      if ($(\"#charts\").length === 0) {\n        $('<div id=\"charts\"></div>').appendTo(\"body\");\n      }\n      $('#charts').html(\"<div class='loading'>\" + RB.i18n.generating_graph + \"</div>\");\n\n      var url = RB.urlFor('show_burndown_chart', { sprint_id: $(this).data('this').sprintId, project_id: RB.constants.project_id});\n      window.open(url);\n    }\n  });\n}(jQuery));\n","//-- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2022 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nif (window.RB === null || window.RB === undefined) {\n  window.RB = {};\n}\n\n\n(function ($) {\n  var object, Factory, Dialog, UserPreferences,\n      ajax;\n\n  object = {\n    // Douglas Crockford's technique for object extension\n    // http://javascript.crockford.com/prototypal.html\n    create: function () {\n      var obj, i, methods, methodName;\n\n      function F() {\n      }\n\n      F.prototype = arguments[0];\n      obj = new F();\n\n      // Add all the other arguments as mixins that\n      // 'write over' any existing methods\n      for (i = 1; i < arguments.length; i += 1) {\n        methods = arguments[i];\n        if (typeof methods === 'object') {\n          for (methodName in methods) {\n            if (methods.hasOwnProperty(methodName)) {\n              obj[methodName] = methods[methodName];\n            }\n          }\n        }\n      }\n      return obj;\n    }\n  };\n\n\n  // Object factory for chiliproject_backlogs\n  Factory = object.create({\n\n    initialize: function (objType, el) {\n      var obj;\n\n      obj = object.create(objType);\n      obj.initialize(el);\n      return obj;\n    }\n\n  });\n\n  // Utilities\n  Dialog = object.create({\n    msg: function (msg) {\n      var dialog, baseClasses;\n\n      baseClasses = 'ui-button ui-widget ui-state-default ui-corner-all';\n\n      if ($('#msgBox').length === 0) {\n        dialog = $('<div id=\"msgBox\"></div>').appendTo('body');\n      }\n      else {\n        dialog = $('#msgBox');\n      }\n\n      dialog.html(msg);\n      dialog.dialog({\n        title: 'Backlogs Plugin',\n        buttons: [\n        {\n          text: 'OK',\n          class: 'button -highlight',\n          click: function () {\n            $(this).dialog(\"close\");\n          }\n        }],\n        modal: true\n      });\n      $('.button').removeClass(baseClasses);\n      $('.ui-icon-closethick').prop('title', 'close');\n    }\n  });\n\n  ajax = (function () {\n    var ajaxQueue, ajaxOngoing,\n        processAjaxQueue;\n\n    ajaxQueue = [];\n    ajaxOngoing = false;\n\n    processAjaxQueue = function () {\n      var options = ajaxQueue.shift();\n\n      if (options !== null && options !== undefined) {\n        ajaxOngoing = true;\n        $.ajax(options);\n      }\n    };\n\n    // Process outstanding entries in the ajax queue whenever a ajax request\n    // finishes.\n    $(document).ajaxComplete(function (event, xhr, settings) {\n      ajaxOngoing = false;\n      processAjaxQueue();\n    });\n\n    return function (options) {\n      ajaxQueue.push(options);\n      if (!ajaxOngoing) {\n        processAjaxQueue();\n      }\n    };\n  }());\n\n  // Abstract the user preference from the rest of the RB objects\n  // so that we can change the underlying implementation as needed\n  UserPreferences = object.create({\n    get: function (key) {\n      return $.cookie(key);\n    },\n\n    set: function (key, value) {\n      $.cookie(key, value, { expires: 365 * 10 });\n    }\n  });\n\n  RB.Object = object;\n  RB.Factory = Factory;\n  RB.Dialog = Dialog;\n  RB.UserPreferences = UserPreferences;\n  RB.ajax = ajax;\n\n}(jQuery));\n","//-- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2022 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\nRB.EditableInplace = (function ($) {\n  return RB.Object.create(RB.Model, {\n\n    displayEditor: function (editor) {\n      this.$.addClass(\"editing\");\n      editor.find(\".editor\").bind('keydown', this.handleKeydown);\n    },\n\n    getEditor: function () {\n      // Create the model editor container if it does not yet exist\n      var editor = this.$.children(\".editors\");\n\n      if (editor.length === 0) {\n        editor = $(\"<div class='editors'></div>\").appendTo(this.$);\n      } else if (!editor.hasClass('permanent')) {\n        editor.first().html('');\n      }\n      return editor;\n    },\n\n    // For detecting Enter and ESC\n    handleKeydown: function (e) {\n      var j, that;\n\n      j = $(this).parents('.model').first();\n      that = j.data('this');\n\n      // 13 is the key code of Enter, 27 of ESC.\n      if (e.which === 13) {\n        that.saveEdits();\n      } else if (e.which === 27) {\n        that.cancelEdit();\n      } else {\n        return true;\n      }\n    }\n  });\n}(jQuery));\n","//-- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2022 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\n/**************************************\n  IMPEDIMENT\n***************************************/\n\nRB.Impediment = (function ($) {\n  return RB.Object.create(RB.Task, {\n\n    initialize: function (el) {\n      var j;  // This ensures that we use a local 'j' variable, not a global one.\n\n      this.$ = j = $(el);\n      this.el = el;\n\n      j.addClass(\"impediment\"); // If node is based on #task_template, it doesn't have the impediment class yet\n\n      // Associate this object with the element for later retrieval\n      j.data('this', this);\n\n      j.on('mouseup', '.editable', this.handleClick);\n    },\n\n    // Override saveDirectives of RB.Task\n    saveDirectives: function () {\n      var j, prev, statusID, data, url;\n\n      j = this.$;\n      prev = this.$.prev();\n      statusID = j.parent('td').first().attr('id').split(\"_\")[1];\n\n      data = j.find('.editor').serialize() +\n                 \"&is_impediment=true\" +\n                 \"&version_id=\" + RB.constants.sprint_id +\n                 \"&status_id=\" + statusID +\n                 \"&prev=\" + (prev.length === 1 ? prev.data('this').getID() : '') +\n                 (this.isNew() ? \"\" : \"&id=\" + j.children('.id').text());\n\n      if (this.isNew()) {\n        url = RB.urlFor('create_impediment', {sprint_id: RB.constants.sprint_id});\n      }\n      else {\n        url = RB.urlFor('update_impediment', {id: this.getID(), sprint_id: RB.constants.sprint_id});\n        data += \"&_method=put\";\n      }\n\n      return {\n        url: url,\n        data: data\n      };\n    }\n  });\n}(jQuery));\n","//-- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2022 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\n// Initialize the backlogs after DOM is loaded\njQuery(function ($) {\n\n  // Initialize each backlog\n  $('.backlog').each(function (index) {\n    // 'this' refers to an element with class=\"backlog\"\n    RB.Factory.initialize(RB.Backlog, this);\n  });\n\n  $('.backlog .toggler').on('click',function(){\n    $(this).toggleClass('closed icon-arrow-up1 icon-arrow-down1');\n    $(this).parents('.backlog').find('ul.stories').toggleClass('closed');\n  });\n});\n","//-- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2022 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\n/***************************************\n  MODEL\n  Common methods for sprint, work_package,\n  story, task, and impediment\n***************************************/\n\nRB.Model = (function ($) {\n  return RB.Object.create({\n\n    initialize: function (el) {\n      this.$ = $(el);\n      this.el = el;\n    },\n\n    afterCreate: function (data, textStatus, xhr) {\n      // Do nothing. Child objects may optionally override this\n    },\n\n    afterSave: function (data, textStatus, xhr) {\n      var isNew, result;\n\n      isNew = this.isNew();\n      result = RB.Factory.initialize(RB.Model, data);\n\n      this.unmarkSaving();\n      this.refresh(result);\n\n      if (isNew) {\n        this.$.attr('id', result.$.attr('id'));\n        this.afterCreate(data, textStatus, xhr);\n      }\n      else {\n        this.afterUpdate(data, textStatus, xhr);\n      }\n    },\n\n    afterUpdate: function (data, textStatus, xhr) {\n      // Do nothing. Child objects may optionally override this\n    },\n\n    beforeSave: function () {\n      // Do nothing. Child objects may or may not override this method\n    },\n\n    cancelEdit: function () {\n      this.endEdit();\n      if (this.isNew()) {\n        this.$.hide('blind');\n      }\n    },\n\n    close: function () {\n      this.$.addClass('closed');\n    },\n\n    copyFromDialog: function () {\n      var editors;\n\n      if (this.$.find(\".editors\").length === 0) {\n        editors = $(\"<div class='editors'></div>\").appendTo(this.$);\n      }\n      else {\n        editors = this.$.find(\".editors\").first();\n      }\n      editors.html(\"\");\n      editors.append($(\"#\" + this.getType().toLowerCase() + \"_editor\").children(\".editor\"));\n      this.saveEdits();\n    },\n\n    displayEditor: function (editor) {\n      var self = this,\n          baseClasses;\n\n      baseClasses = 'ui-button ui-widget ui-state-default ui-corner-all';\n\n      editor.dialog({\n        buttons: [\n        {\n          text: 'OK',\n          class: 'button -highlight',\n          click: function () {\n            self.copyFromDialog();\n            $(this).dialog(\"close\");\n          }\n        },\n        {\n          text: 'Cancel',\n          class: 'button',\n          click: function () {\n            self.cancelEdit();\n            $(this).dialog(\"close\");\n          }\n        },\n        ],\n        close: function (e, ui) {\n          if (e.which === 1 || e.which === 27) {\n            self.cancelEdit();\n          }\n        },\n        dialogClass: this.getType().toLowerCase() + '_editor_dialog',\n        modal:       true,\n        position:    { my: 'center', at: 'center', of: window },\n        resizable:   false,\n        title:       (this.isNew() ? this.newDialogTitle() : this.editDialogTitle())\n      });\n      editor.find(\".editor\").first().focus();\n      $('.button').removeClass(baseClasses);\n      $('.ui-icon-closethick').prop('title', 'close');\n    },\n\n    edit: function () {\n      var editor = this.getEditor(),\n          self = this,\n          maxTabIndex = 0;\n\n      $('.stories .editors .editor').each(function (index) {\n        var value;\n\n        value = parseInt($(this).attr('tabindex'), 10);\n\n        if (maxTabIndex < value) {\n          maxTabIndex = value;\n        }\n      });\n\n      if (!editor.hasClass('permanent')) {\n        this.$.find('.editable').each(function (index) {\n          let field, fieldId, fieldType, fieldLabel, fieldName, fieldOrder, input, newInput,\n            typeId, statusId;\n\n          field = $(this);\n          fieldId = field.attr('field_id');\n          fieldName = field.attr('fieldname');\n          fieldLabel = field.attr('fieldlabel');\n          fieldOrder = parseInt(field.attr('fieldorder'), 10);\n          fieldType = field.attr('fieldtype') || 'input';\n\n          if (!fieldLabel) {\n            fieldLabel = fieldName.replace(/_/ig, \" \").replace(/ id$/ig, \"\");\n          }\n\n          if (fieldType === 'select') {\n            // Special handling for status_id => they are dependent of type_id\n            if (fieldName === 'status_id') {\n              typeId = $.trim(self.$.find('.type_id .v').html());\n              // when creating stories we need to query the select directly\n              if (typeId === '') {\n                typeId = $('#type_id_options').val();\n              }\n              statusId = $.trim(self.$.find('.status_id .v').html());\n              input = self.findFactory(typeId, statusId, fieldName);\n            } else if (fieldName === 'type_id') {\n              input = $('#' + fieldName + '_options').clone(true);\n              // if the type changes the status dropdown has to be modified\n              input.change(function () {\n                typeId = $(this).val();\n                statusId = $.trim(self.$.find('.status_id .v').html());\n                newInput = self.findFactory(typeId, statusId, 'status_id');\n                newInput = self.prepareInputFromFactory(newInput, fieldId, 'status_id', fieldOrder, maxTabIndex);\n                newInput = self.replaceStatusForNewType(input, newInput, $(this).parent().find('.status_id').val(), editor);\n              });\n            } else {\n              input = $('#' + fieldName + '_options').clone(true);\n            }\n          } else {\n            input = $(document.createElement(fieldType));\n          }\n\n          input = self.prepareInputFromFactory(input, fieldId, fieldName, fieldOrder, maxTabIndex);\n\n          // Copy the value in the field to the input element\n          input.val(fieldType === 'select' ? field.children('.v').first().text() : field.text());\n\n          // Record in the model's root element which input field had the last focus. We will\n          // use this information inside RB.Model.refresh() to determine where to return the\n          // focus after the element has been refreshed with info from the server.\n          input.focus(function () {\n            self.$.data('focus', $(this).attr('name'));\n          });\n\n          input.blur(function () {\n            self.$.data('focus', '');\n          });\n\n          $(\"<label />\").attr({\n            for: input.attr('id'),\n          }).text(fieldLabel).appendTo(editor);\n          input.appendTo(editor);\n        });\n      }\n\n      this.displayEditor(editor);\n      this.editorDisplayed(editor);\n      return editor;\n    },\n\n    findFactory: function (typeId, statusId, fieldName){\n      // Find a factory\n      newInput = $('#' + fieldName + '_options_' + typeId + '_' + statusId);\n      if (newInput.length === 0) {\n        // when no list found, only offer the default status\n        // no list = combination is not valid / user has no rights -> workflow\n        newInput = $('#status_id_options_default_' + statusId);\n      }\n      newInput = newInput.clone(true);\n      return newInput;\n    },\n\n    prepareInputFromFactory: function (input,fieldId,fieldName,fieldOrder, maxTabIndex) {\n      input.attr('id', fieldName + '_' + fieldId);\n      input.attr('name', fieldName);\n      input.attr('tabindex', fieldOrder + maxTabIndex);\n      input.addClass(fieldName);\n      input.addClass('editor');\n      input.removeClass('template');\n      input.removeClass('helper');\n      return input;\n    },\n\n    replaceStatusForNewType: function (input,newInput, statusId, editor) {\n      // Append an empty field and select it in case the old status is not available\n      newInput.val(statusId); // try to set the status\n      if (newInput.val() !== statusId){\n          newInput.append(new Option('',''));\n          newInput.val('');\n      }\n      newInput.focus(function () {\n        self.$.data('focus', $(this).attr('name'));\n      });\n\n      newInput.blur(function () {\n        self.$.data('focus', '');\n      });\n      // Find the old status dropdown and replace it with the new one\n      input.parent().find('.status_id').replaceWith(newInput);\n    },\n\n    // Override this method to change the dialog title\n    editDialogTitle: function () {\n      return \"Edit \" + this.getType();\n    },\n\n    editorDisplayed: function (editor) {\n      // Do nothing. Child objects may override this.\n    },\n\n    endEdit: function () {\n      this.$.removeClass('editing');\n    },\n\n    error: function (xhr, textStatus, error) {\n      this.markError();\n      RB.Dialog.msg($(xhr.responseText).find('.errors').html());\n      this.processError(xhr, textStatus, error);\n    },\n\n    getEditor: function () {\n      var editorId, editor;\n      // Create the model editor if it does not yet exist\n      editorId = this.getType().toLowerCase() + \"_editor\";\n\n      editor = $(\"#\" + editorId).html(\"\");\n\n      if (editor.length === 0) {\n        editor = $(\"<div id='\" + editorId + \"'></div>\").appendTo(\"body\");\n      }\n      return editor;\n    },\n\n    getID: function () {\n      return this.$.children('.id').children('.v').text();\n    },\n\n    getType: function () {\n      throw new Error(\"Child objects must override getType()\");\n    },\n\n    handleClick: function (e) {\n      var field, model, j, editor;\n\n      field = $(this);\n      model = field.parents('.model').first().data('this');\n      j = model.$;\n\n      if (!j.hasClass('editing') && !j.hasClass('dragging') && !j.hasClass('prevent_edit') && !$(e.target).hasClass('prevent_edit')) {\n        editor = model.edit();\n        var input = editor.find('.' + $(e.currentTarget).attr('fieldname') + '.editor');\n\n        input.focus();\n        input.click();\n      }\n    },\n\n    handleSelect: function (e) {\n      var j = $(this),\n          self = j.data('this');\n\n      if (!$(e.target).hasClass('editable') &&\n          !$(e.target).hasClass('checkbox') &&\n          !j.hasClass('editing') &&\n          e.target.tagName !== 'A' &&\n          !j.hasClass('dragging')) {\n\n        self.setSelection(!self.isSelected());\n      }\n    },\n\n    isClosed: function () {\n      return this.$.hasClass('closed');\n    },\n\n    isNew: function () {\n      return this.getID() === \"\";\n    },\n\n    markError: function () {\n      this.$.addClass('error icon icon-bug');\n    },\n\n    markIfClosed: function () {\n      throw new Error(\"Child objects must override markIfClosed()\");\n    },\n\n    markSaving: function () {\n      this.$.addClass('ajax-indicator');\n    },\n\n    // Override this method to change the dialog title\n    newDialogTitle: function () {\n      return \"New \" + this.getType();\n    },\n\n    open: function () {\n      this.$.removeClass('closed');\n    },\n\n    processError: function (x, t, e) {\n      // Override as needed\n    },\n\n    refresh: function (obj) {\n      this.$.html(obj.$.html());\n\n      if (obj.$.length > 1) {\n        // execute script tags, that were attached to the sources\n        obj.$.filter('script').each(function () {\n          try {\n            $.globalEval($(this).html());\n          }\n          catch (e) {\n          }\n        });\n      }\n\n      if (obj.isClosed()) {\n        this.close();\n      } else {\n        this.open();\n      }\n      this.refreshed();\n    },\n\n    refreshed: function () {\n      // Override as needed\n    },\n\n    saveDirectives: function () {\n      throw new Error(\"Child object must implement saveDirectives()\");\n    },\n\n    saveEdits: function () {\n      var j = this.$,\n          self = this,\n          editors = j.find('.editor'),\n          saveDir;\n\n      // Copy the values from the fields to the proper html elements\n      editors.each(function (index) {\n        var editor, fieldName;\n\n        editor = $(this);\n        fieldName = editor.attr('name');\n        if (this.type.match(/select/)) {\n          // if the user changes the type and that type does not offer the status\n          // of the current story, the status field is set to blank\n          // if the user saves this edit we will receive a validation error\n          // the following 3 lines will prevent the override of the status id\n          // otherwise we would loose the status id of the current ticket\n          if (!(editor.val() === '' && fieldName === 'status_id')){\n            j.children('div.' + fieldName).children('.v').text(editor.val());\n          }\n\n          j.children('div.' + fieldName).children('.t').text(editor.children(':selected').text());\n\n        } else {\n          j.children('div.' + fieldName).text(editor.val());\n        }\n      });\n\n      // Mark the work_package as closed if so\n      self.markIfClosed();\n\n      // Get the save directives.\n      saveDir = self.saveDirectives();\n\n      self.beforeSave();\n\n      self.unmarkError();\n      self.markSaving();\n      RB.ajax({\n        type: \"POST\",\n        url: saveDir.url,\n        data: saveDir.data,\n        success   : function (d, t, x) {\n          self.afterSave(d, t, x);\n        },\n        error     : function (x, t, e) {\n          self.error(x, t, e);\n        }\n      });\n      self.endEdit();\n    },\n\n    unmarkError: function () {\n      this.$.removeClass('error icon icon-bug');\n    },\n\n    unmarkSaving: function () {\n      this.$.removeClass('ajax-indicator');\n    }\n  });\n}(jQuery));\n","//-- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2022 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\n// Initialize everything after DOM is loaded\njQuery(function ($) {\n  var defaultDialogColor; // this var is used as cache for some computation in\n                          // the inner function. -> Do not move to where it\n                          // actually belongs!\n\n  RB.Factory.initialize(RB.Taskboard, $('#taskboard'));\n\n  $('#assigned_to_id_options').change(function () {\n    var selected = $(this).children(':selected');\n    if (!defaultDialogColor) {\n      // fetch the color from the task rendered as a prototype/template for new tasks\n      defaultDialogColor = $('#work_package_').css('background-color');\n    }\n    $(this).parents('.ui-dialog').css('background-color', selected.attr('color') || defaultDialogColor);\n    $(this).parents('.ui-dialog').colorcontrast();\n  });\n});\n","//-- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2022 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\n/***************************************\n  SPRINT\n***************************************/\n\nRB.Sprint = (function ($) {\n  return RB.Object.create(RB.Model, RB.EditableInplace, {\n\n    initialize: function (el) {\n      this.$ = $(el);\n      this.el = el;\n\n      // Associate this object with the element for later retrieval\n      this.$.data('this', this);\n      this.$.on('mouseup', '.editable', this.handleClick);\n    },\n\n    beforeSave: function () {\n      // Do nothing\n    },\n\n    getType: function () {\n      return \"Sprint\";\n    },\n\n    markIfClosed: function () {\n      // Do nothing\n    },\n\n    refreshed: function () {\n      // Do nothing\n    },\n\n    saveDirectives: function () {\n      var j = this.$,\n          data = j.find('.editor').serialize() + \"&_method=put\",\n          url = RB.urlFor('update_sprint', { id: this.getID() });\n\n      return {\n        url : url,\n        data: data\n      };\n    },\n\n    beforeSaveDragResult: function () {\n      // Do nothing\n    }\n  });\n}(jQuery));\n","//-- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2022 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\n/**************************************\n  STORY\n***************************************/\nRB.Story = (function ($) {\n  return RB.Object.create(RB.WorkPackage, RB.EditableInplace, {\n    initialize: function (el) {\n      this.$ = $(el);\n      this.el = el;\n\n      // Associate this object with the element for later retrieval\n      this.$.data('this', this);\n      this.$.on('click', '.editable', this.handleClick);\n    },\n\n    /**\n     * Callbacks from model.js\n     **/\n    beforeSave: function () {\n      this.refreshStory();\n    },\n\n    afterCreate: function (data, textStatus, xhr) {\n      this.refreshStory();\n    },\n\n    afterUpdate : function (data, textStatus, xhr) {\n      this.refreshStory();\n    },\n\n    refreshed: function () {\n      this.refreshStory();\n    },\n    /**/\n\n    editDialogTitle: function () {\n      return \"Story #\" + this.getID();\n    },\n\n    editorDisplayed: function (editor) { },\n\n    getPoints: function () {\n      var points = parseInt(this.$.find('.story_points').first().text(), 10);\n      return isNaN(points) ? 0 : points;\n    },\n\n    getType: function () {\n      return \"Story\";\n    },\n\n    markIfClosed: function () {\n      // Do nothing\n    },\n\n    newDialogTitle: function () {\n      return \"New Story\";\n    },\n\n    refreshStory : function () {\n      this.recalcVelocity();\n    },\n\n    recalcVelocity: function () {\n      this.$.parents(\".backlog\").first().data('this').refresh();\n    },\n\n    saveDirectives: function () {\n      var url, prev, sprintId, data;\n\n      prev = this.$.prev();\n      sprintId = this.$.parents('.backlog').data('this').isSprintBacklog() ?\n                   this.$.parents('.backlog').data('this').getSprint().data('this').getID() :\n                   '';\n\n      data = \"prev=\" +\n             (prev.length === 1 ?  prev.data('this').getID() : '') +\n             \"&version_id=\" + sprintId;\n\n      if (this.$.find('.editor').length > 0) {\n        data += \"&\" + this.$.find('.editor').serialize();\n      }\n\n      //TODO: this might be unsave in case the parent of this story is not the\n      //      sprint backlog, then we dont have a sprintId an cannot generate a\n      //      valid url - one option might be to take RB.constants.sprint_id\n      //      hoping it exists\n      if (this.isNew()) {\n        url = RB.urlFor('create_story', {sprint_id: sprintId});\n      } else {\n        url = RB.urlFor('update_story', {id: this.getID(), sprint_id: sprintId});\n        data += \"&_method=put\";\n      }\n\n      return {\n        url: url,\n        data: data\n      };\n    },\n\n    beforeSaveDragResult: function () {\n      // Do nothing\n    }\n  });\n}(jQuery));\n","//-- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2022 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\n/**************************************\n  TASK\n***************************************/\n\nRB.Task = (function ($) {\n  return RB.Object.create(RB.WorkPackage, {\n\n    initialize: function (el) {\n      this.$ = $(el);\n      this.el = el;\n\n      // If node is based on #task_template, it doesn't have the story class yet\n      this.$.addClass(\"task\");\n\n      // Associate this object with the element for later retrieval\n      this.$.data('this', this);\n      this.$.on('mouseup', '.editable', this.handleClick);\n      this.defaultColor =  $('#rb .task').css('background-color');\n    },\n\n    beforeSave: function name() {\n      if (this.el && $(this.el).hasClass('dragging')){\n        return;\n      }\n      var c = this.$.find('select.assigned_to_id').children(':selected').attr('color') || this.defaultColor;\n      this.$.css('background-color', c);\n      this.$.colorcontrast();\n    },\n\n    editorDisplayed: function (dialog) {\n      dialog.parents('.ui-dialog').css('background-color', this.$.css('background-color'));\n      dialog.parents('.ui-dialog').colorcontrast();\n    },\n\n    getType: function () {\n      return \"Task\";\n    },\n\n    markIfClosed: function () {\n      if (this.$.parent('td').first().hasClass('closed')) {\n        this.$.addClass('closed');\n      } else {\n        this.$.removeClass('closed');\n      }\n    },\n\n    saveDirectives: function () {\n      var prev, cellId, data, url;\n\n      prev = this.$.prev();\n      cellId = this.$.parent('td').first().attr('id').split(\"_\");\n\n      data = this.$.find('.editor').serialize() +\n                 \"&parent_id=\" + cellId[0] +\n                 \"&status_id=\" + cellId[1] +\n                 \"&prev=\" + (prev.length === 1 ? prev.data('this').getID() : '') +\n                 (this.isNew() ? \"\" : \"&id=\" + this.$.children('.id').text());\n\n      if (this.isNew()) {\n        url = RB.urlFor('create_task', {sprint_id: RB.constants.sprint_id});\n      }\n      else {\n        url = RB.urlFor('update_task', {id: this.getID(), sprint_id: RB.constants.sprint_id});\n        data += \"&_method=put\";\n      }\n\n      return {\n        url: url,\n        data: data\n      };\n    },\n\n    beforeSaveDragResult: function () {\n      if (this.$.parent('td').first().hasClass('closed')) {\n        // This is only for the purpose of making the Remaining Hours reset\n        // instantaneously after dragging to a closed status. The server should\n        // still make sure to reset the value.\n        this.$.children('.remaining_hours.editor').val('');\n        this.$.children('.remaining_hours.editable').text('');\n      }\n    },\n\n    refreshed : function () {\n      var remainingHours = this.$.children('.remaining_hours.editable');\n\n      remainingHours.toggleClass('empty', remainingHours.is(':empty'));\n    }\n  });\n}(jQuery));\n","//-- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2022 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\n/***************************************\n  TASKBOARD\n***************************************/\n\nRB.Taskboard = (function ($) {\n  return RB.Object.create(RB.Model, {\n\n    initialize: function (el) {\n      var self = this; // So we can bind the event handlers to this object\n\n      this.$ = $(el);\n      this.el = el;\n\n      // Associate this object with the element for later retrieval\n      this.$.data('this', this);\n\n      // Initialize column widths\n      this.colWidthUnit = $(\".swimlane\").width();\n      this.defaultColWidth = 1;\n      this.loadColWidthPreference();\n      this.updateColWidths();\n\n      $(\"#col_width input\").keyup(function (e) {\n        if (e.which === 13) {\n          self.updateColWidths();\n        }\n      });\n\n      this.initializeTasks();\n      this.initializeImpediments();\n\n      this.initializeNewButtons();\n      this.initializeSortables();\n\n      this.initializeTaskboardMenus();\n    },\n\n    initializeNewButtons : function () {\n      this.$.find('#tasks .add_new.clickable').click(this.handleAddNewTaskClick);\n      this.$.find('#impediments .add_new.clickable').click(this.handleAddNewImpedimentClick);\n    },\n\n    initializeSortables : function () {\n      this.$.find('#impediments .list').sortable({\n        placeholder: 'placeholder',\n        start:  this.dragStart,\n        stop:   this.dragStop,\n        update: this.dragComplete,\n        cancel: '.prevent_edit'\n      }).sortable('option', 'connectWith', '#impediments .list');\n      $('#impediments .list').disableSelection();\n\n      var list, augmentList, self = this;\n\n      list = this.$.find('#tasks .list');\n\n      augmentList = function () {\n        $(list.splice(0, 50)).sortable({\n          placeholder: 'placeholder',\n          start:  self.dragStart,\n          stop:   self.dragStop,\n          update: self.dragComplete,\n          cancel: '.prevent_edit'\n        }).sortable('option', 'connectWith', '#tasks .list');\n        $('#tasks .list').disableSelection();\n\n        if (list.length > 0) {\n          /*globals setTimeout*/\n          setTimeout(augmentList, 10);\n        }\n      };\n      augmentList();\n    },\n\n    initializeTasks : function () {\n      this.$.find('.task').each(function (index) {\n        RB.Factory.initialize(RB.Task, this);\n      });\n    },\n\n    initializeImpediments : function () {\n      this.$.find('.impediment').each(function (index) {\n        RB.Factory.initialize(RB.Impediment, this);\n      });\n    },\n\n    initializeTaskboardMenus : function () {\n      var toggleOpen = \"open icon-pulldown-up icon-pulldown\";\n\n      $(\".backlog .menu > div.menu-trigger\").on(\"click\", function() {\n        $(this).toggleClass(toggleOpen);\n      });\n\n      $(\".backlog .menu > ul.items li.item\").on(\"click\", function() {\n        $(this).closest(\".menu\").find(\"div.menu-trigger\").toggleClass(toggleOpen);\n      });\n    },\n\n    dragComplete: function (e, ui) {\n      // Handler is triggered for source and target. Thus the need to check.\n      var isDropTarget = (ui.sender === null);\n\n      if (isDropTarget) {\n        ui.item.data('this').saveDragResult();\n      }\n    },\n\n    dragStart: function (e, ui) {\n      ui.item.addClass(\"dragging\");\n    },\n\n    dragStop: function (e, ui) {\n      ui.item.removeClass(\"dragging\");\n    },\n\n    handleAddNewImpedimentClick: function (e) {\n      var row = $(this).parents(\"tr\").first();\n      $('#taskboard').data('this').newImpediment(row);\n    },\n\n    handleAddNewTaskClick: function (e) {\n      var row = $(this).parents(\"tr\").first();\n      $('#taskboard').data('this').newTask(row);\n    },\n\n    loadColWidthPreference: function () {\n      var w = RB.UserPreferences.get('taskboardColWidth');\n      if (w === null || w === undefined) {\n        w = this.defaultColWidth;\n        RB.UserPreferences.set('taskboardColWidth', w);\n      }\n      $(\"#col_width input\").val(w);\n    },\n\n    newImpediment: function (row) {\n      var impediment, o;\n\n      impediment = $('#impediment_template').children().first().clone();\n      row.find(\".list\").first().prepend(impediment);\n\n      o = RB.Factory.initialize(RB.Impediment, impediment);\n      o.edit();\n    },\n\n    newTask: function (row) {\n      var task, o;\n\n      task = $('#task_template').children().first().clone();\n      row.find(\".list\").first().prepend(task);\n\n      o = RB.Factory.initialize(RB.Task, task);\n      o.edit();\n    },\n\n    updateColWidths: function () {\n      var w = parseInt($(\"#col_width input\").val(), 10);\n\n      if (isNaN(w) || w <= 0) {\n        w = this.defaultColWidth;\n      }\n      $(\"#col_width input\").val(w);\n      RB.UserPreferences.set('taskboardColWidth', w);\n      $(\".swimlane\").width(this.colWidthUnit * w).css('min-width', this.colWidthUnit * w);\n    }\n  });\n}(jQuery));\n","//-- copyright\n// OpenProject is an open source project management software.\n// Copyright (C) 2012-2022 the OpenProject GmbH\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License version 3.\n//\n// OpenProject is a fork of ChiliProject, which is a fork of Redmine. The copyright follows:\n// Copyright (C) 2006-2013 Jean-Philippe Lang\n// Copyright (C) 2010-2013 the ChiliProject Team\n//\n// This program is free software; you can redistribute it and/or\n// modify it under the terms of the GNU General Public License\n// as published by the Free Software Foundation; either version 2\n// of the License, or (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with this program; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n//\n// See COPYRIGHT and LICENSE files for more details.\n//++\n\n/**************************************\n  WORK PACKAGE\n***************************************/\nRB.WorkPackage = (function ($) {\n  return RB.Object.create(RB.Model, {\n\n    initialize: function (el) {\n      this.$ = $(el);\n      this.el = el;\n    },\n\n    beforeSaveDragResult: function () {\n      // Do nothing\n    },\n\n    getType: function () {\n      return \"WorkPackage\";\n    },\n\n    saveDragResult: function () {\n      this.beforeSaveDragResult();\n      if (!this.$.hasClass('editing')) {\n        this.saveEdits();\n      }\n    }\n  });\n}(jQuery));\n"],"sourceRoot":"webpack:///","file":"common.b203d09f171877d46442.js"}