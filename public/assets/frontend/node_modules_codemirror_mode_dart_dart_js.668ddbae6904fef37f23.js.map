{"version":3,"mappings":"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","names":["CodeMirror","keywords","split","blockKeywords","atoms","builtins","words","obj","i","length","state","interpolationStack","push","tokenize","pop","quote","stream","raw","tripleQuoted","eat","escaped","eol","peek","pushInterpolationStack","tokenInterpolation","next","match","tokenStringHelper","tokenInterpolationIdentifier","eatWhile","popInterpolationStack","depth","ch","tokenNestedComment","defineMIME","name","set","builtin","hooks","tokenString","r","_stream","sizeInterpolationStack","token","_","style","RegExp","test","current","registerHelper","concat","defineMode","conf","getMode","mod","require"],"sources":["./node_modules/codemirror/mode/dart/dart.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../clike/clike\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../clike/clike\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var keywords = (\"this super static final const abstract class extends external factory \" +\n    \"implements mixin get native set typedef with enum throw rethrow \" +\n    \"assert break case continue default in return new deferred async await covariant \" +\n    \"try catch finally do else for if switch while import library export \" +\n    \"part of show hide is as extension on yield late required\").split(\" \");\n  var blockKeywords = \"try catch finally do else for if switch while\".split(\" \");\n  var atoms = \"true false null\".split(\" \");\n  var builtins = \"void bool num int double dynamic var String Null Never\".split(\" \");\n\n  function set(words) {\n    var obj = {};\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n\n  function pushInterpolationStack(state) {\n    (state.interpolationStack || (state.interpolationStack = [])).push(state.tokenize);\n  }\n\n  function popInterpolationStack(state) {\n    return (state.interpolationStack || (state.interpolationStack = [])).pop();\n  }\n\n  function sizeInterpolationStack(state) {\n    return state.interpolationStack ? state.interpolationStack.length : 0;\n  }\n\n  CodeMirror.defineMIME(\"application/dart\", {\n    name: \"clike\",\n    keywords: set(keywords),\n    blockKeywords: set(blockKeywords),\n    builtin: set(builtins),\n    atoms: set(atoms),\n    hooks: {\n      \"@\": function(stream) {\n        stream.eatWhile(/[\\w\\$_\\.]/);\n        return \"meta\";\n      },\n\n      // custom string handling to deal with triple-quoted strings and string interpolation\n      \"'\": function(stream, state) {\n        return tokenString(\"'\", stream, state, false);\n      },\n      \"\\\"\": function(stream, state) {\n        return tokenString(\"\\\"\", stream, state, false);\n      },\n      \"r\": function(stream, state) {\n        var peek = stream.peek();\n        if (peek == \"'\" || peek == \"\\\"\") {\n          return tokenString(stream.next(), stream, state, true);\n        }\n        return false;\n      },\n\n      \"}\": function(_stream, state) {\n        // \"}\" is end of interpolation, if interpolation stack is non-empty\n        if (sizeInterpolationStack(state) > 0) {\n          state.tokenize = popInterpolationStack(state);\n          return null;\n        }\n        return false;\n      },\n\n      \"/\": function(stream, state) {\n        if (!stream.eat(\"*\")) return false\n        state.tokenize = tokenNestedComment(1)\n        return state.tokenize(stream, state)\n      },\n      token: function(stream, _, style) {\n        if (style == \"variable\") {\n          // Assume uppercase symbols are classes using variable-2\n          var isUpper = RegExp('^[_$]*[A-Z][a-zA-Z0-9_$]*$','g');\n          if (isUpper.test(stream.current())) {\n            return 'variable-2';\n          }\n        }\n      }\n    }\n  });\n\n  function tokenString(quote, stream, state, raw) {\n    var tripleQuoted = false;\n    if (stream.eat(quote)) {\n      if (stream.eat(quote)) tripleQuoted = true;\n      else return \"string\"; //empty string\n    }\n    function tokenStringHelper(stream, state) {\n      var escaped = false;\n      while (!stream.eol()) {\n        if (!raw && !escaped && stream.peek() == \"$\") {\n          pushInterpolationStack(state);\n          state.tokenize = tokenInterpolation;\n          return \"string\";\n        }\n        var next = stream.next();\n        if (next == quote && !escaped && (!tripleQuoted || stream.match(quote + quote))) {\n          state.tokenize = null;\n          break;\n        }\n        escaped = !raw && !escaped && next == \"\\\\\";\n      }\n      return \"string\";\n    }\n    state.tokenize = tokenStringHelper;\n    return tokenStringHelper(stream, state);\n  }\n\n  function tokenInterpolation(stream, state) {\n    stream.eat(\"$\");\n    if (stream.eat(\"{\")) {\n      // let clike handle the content of ${...},\n      // we take over again when \"}\" appears (see hooks).\n      state.tokenize = null;\n    } else {\n      state.tokenize = tokenInterpolationIdentifier;\n    }\n    return null;\n  }\n\n  function tokenInterpolationIdentifier(stream, state) {\n    stream.eatWhile(/[\\w_]/);\n    state.tokenize = popInterpolationStack(state);\n    return \"variable\";\n  }\n\n  function tokenNestedComment(depth) {\n    return function (stream, state) {\n      var ch\n      while (ch = stream.next()) {\n        if (ch == \"*\" && stream.eat(\"/\")) {\n          if (depth == 1) {\n            state.tokenize = null\n            break\n          } else {\n            state.tokenize = tokenNestedComment(depth - 1)\n            return state.tokenize(stream, state)\n          }\n        } else if (ch == \"/\" && stream.eat(\"*\")) {\n          state.tokenize = tokenNestedComment(depth + 1)\n          return state.tokenize(stream, state)\n        }\n      }\n      return \"comment\"\n    }\n  }\n\n  CodeMirror.registerHelper(\"hintWords\", \"application/dart\", keywords.concat(atoms).concat(builtins));\n\n  // This is needed to make loading through meta.js work.\n  CodeMirror.defineMode(\"dart\", function(conf) {\n    return CodeMirror.getMode(conf, \"application/dart\");\n  }, \"clike\");\n});\n"],"sourceRoot":"webpack:///","file":"node_modules_codemirror_mode_dart_dart_js.668ddbae6904fef37f23.js"}