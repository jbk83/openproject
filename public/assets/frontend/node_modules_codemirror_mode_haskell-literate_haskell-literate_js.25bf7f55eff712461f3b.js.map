{"version":3,"mappings":"gLAUC,YACD,aAEAA,8CACA,wCAEA,OACAC,sBACA,OACAC,UACAC,4BAGAC,oBACA,iBACAC,qBACA,OAEAA,SACAC,wBAEAC,cACA,YAGAC,sBACA,iBAA+BC,0BAAwC,QAGpE,WAEHT,2DApCAA,CAAQU,EAAQ,OAAyBA,EAAQ","names":["t","startState","inCode","baseState","token","l","n","e","innerMode","state","o"],"sources":["./node_modules/codemirror/mode/haskell-literate/haskell-literate.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../haskell/haskell\"))\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../haskell/haskell\"], mod)\n  else // Plain browser env\n    mod(CodeMirror)\n})(function (CodeMirror) {\n  \"use strict\"\n\n  CodeMirror.defineMode(\"haskell-literate\", function (config, parserConfig) {\n    var baseMode = CodeMirror.getMode(config, (parserConfig && parserConfig.base) || \"haskell\")\n\n    return {\n      startState: function () {\n        return {\n          inCode: false,\n          baseState: CodeMirror.startState(baseMode)\n        }\n      },\n      token: function (stream, state) {\n        if (stream.sol()) {\n          if (state.inCode = stream.eat(\">\"))\n            return \"meta\"\n        }\n        if (state.inCode) {\n          return baseMode.token(stream, state.baseState)\n        } else {\n          stream.skipToEnd()\n          return \"comment\"\n        }\n      },\n      innerMode: function (state) {\n        return state.inCode ? {state: state.baseState, mode: baseMode} : null\n      }\n    }\n  }, \"haskell\")\n\n  CodeMirror.defineMIME(\"text/x-literate-haskell\", \"haskell-literate\")\n});\n"],"sourceRoot":"webpack:///","file":"node_modules_codemirror_mode_haskell-literate_haskell-literate_js.25bf7f55eff712461f3b.js"}